{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\d896422\\\\Documents\\\\hello\\\\paw_code\\\\src\\\\components\\\\layout\\\\sidebar\\\\sidebarItem.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { ListItem, ListItemIcon, ListItemText, makeStyles, ListItemAvatar, Avatar, Typography } from '@material-ui/core';\nimport { AppContext } from '../../../appProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  selectedBorder: {\n    borderRightStyle: 'solid',\n    borderWidth: '4px',\n    backgroundColor: '#0678f414',\n    borderColor: '#0678f4',\n    color: '#000000'\n  },\n  selectedFont: {\n    fontWeight: 600\n  },\n  selectedColor: {\n    color: '#000000'\n  },\n  selectedColorContracted: {\n    color: '#0678f4'\n  },\n  avatar: {\n    backgroundColor: \"#0678f4\",\n    width: 35,\n    height: 35\n  },\n  avatarContainer: {\n    marginLeft: -4\n  }\n}));\n\nconst SidebarItem = props => {\n  _s();\n\n  const [state, setState] = React.useContext(AppContext);\n  const classes = useStyles();\n  const label = props.selected ? /*#__PURE__*/_jsxDEV(\"strong\", {\n    children: [\" \", props.name, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 36\n  }, this) : props.name;\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    button: true,\n    style: props.image ? {\n      width: \"25%\"\n    } : null,\n    onClick: props.onClic,\n    selected: props.selected,\n    className: props.selected ? classes.selectedBorder : null,\n    children: [!props.iniciales ? /*#__PURE__*/_jsxDEV(ListItemIcon, {\n      className: props.selected ? state.showSidebar ? classes.selectedColor : classes.selectedColorContracted : null,\n      children: props.icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(ListItemAvatar, {\n      className: classes.avatarContainer,\n      children: /*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: props.iniciales\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), state.showSidebar ? props.image ? props.image : props.main ? /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      color: \"initial\",\n      children: \"PAW\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }, this) : /*#__PURE__*/_jsxDEV(ListItemText, {\n      primary: label,\n      secondary: props.desc,\n      className: props.selected ? classes.selectedFont : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }, this) : null]\n  }, props.name, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SidebarItem, \"wTglAM6e2cSxI4Al7jPoHnGFYwk=\", false, function () {\n  return [useStyles];\n});\n\n_c = SidebarItem;\nexport default SidebarItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"SidebarItem\");","map":{"version":3,"sources":["C:/Users/d896422/Documents/hello/paw_code/src/components/layout/sidebar/sidebarItem.js"],"names":["React","ListItem","ListItemIcon","ListItemText","makeStyles","ListItemAvatar","Avatar","Typography","AppContext","useStyles","theme","selectedBorder","borderRightStyle","borderWidth","backgroundColor","borderColor","color","selectedFont","fontWeight","selectedColor","selectedColorContracted","avatar","width","height","avatarContainer","marginLeft","SidebarItem","props","state","setState","useContext","classes","label","selected","name","image","onClic","iniciales","showSidebar","icon","main","desc"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport {ListItem,\r\n        ListItemIcon,\r\n        ListItemText,\r\n        makeStyles,\r\n        ListItemAvatar,\r\n        Avatar, Typography\r\n} from '@material-ui/core';\r\n\r\nimport { AppContext } from '../../../appProvider';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    selectedBorder: {\r\n        borderRightStyle: 'solid',\r\n        borderWidth: '4px',\r\n        backgroundColor: '#0678f414',\r\n        borderColor: '#0678f4',\r\n        color: '#000000',\r\n    },\r\n    selectedFont: {\r\n        fontWeight: 600,\r\n    },\r\n    selectedColor: {\r\n        color: '#000000',\r\n    }, selectedColorContracted: {\r\n        color: '#0678f4',\r\n    },\r\n    avatar: {\r\n        backgroundColor: \"#0678f4\",\r\n        width: 35,\r\n        height: 35,\r\n    },\r\n    avatarContainer: {\r\n        marginLeft: -4\r\n    }\r\n  }));\r\n  \r\n\r\nconst SidebarItem = (props) => {\r\n\r\n    const [state, setState] = React.useContext(AppContext);\r\n    const classes = useStyles();\r\n\r\n    const label = props.selected ? <strong> {props.name} </strong>: props.name; \r\n    return ( \r\n        <ListItem button \r\n            style={props.image ? {width: \"25%\"} : null}\r\n            onClick={props.onClic} \r\n            selected={props.selected} \r\n            key={props.name} \r\n            className={props.selected ? classes.selectedBorder : null}> \r\n            {!props.iniciales \r\n            ?   <ListItemIcon  \r\n                    className={\r\n                        props.selected \r\n                        ? state.showSidebar\r\n                            ? classes.selectedColor \r\n                            : classes.selectedColorContracted\r\n                        :null}>\r\n                    {props.icon}\r\n                </ListItemIcon>\r\n            :   <ListItemAvatar className={classes.avatarContainer}>\r\n                    <Avatar className={classes.avatar}>{props.iniciales}</Avatar>\r\n                </ListItemAvatar>\r\n            }\r\n            {state.showSidebar \r\n                ?   props.image \r\n                    ? props.image\r\n                    : props.main \r\n                        ?   <Typography variant=\"h6\" color=\"initial\">PAW</Typography>\r\n                        :   <ListItemText  \r\n                                primary={label} \r\n                                secondary={props.desc}\r\n                                className={props.selected ? classes.selectedFont : null}\r\n                            />\r\n                : null\r\n            }\r\n        </ListItem>\r\n     );\r\n}\r\n \r\nexport default SidebarItem;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}