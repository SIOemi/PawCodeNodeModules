{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\d896422\\\\Documents\\\\hello\\\\paw_code\\\\src\\\\components\\\\inputs\\\\jefesDeTrabajoSelect.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { TextField, Box, FormControlLabel, Checkbox, InputAdornment, Hidden } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppContext } from '../../appProvider';\nimport { serviciosGEMA } from '../../servicios/servicios';\nimport { DialogActions, DialogContent, DialogTitle, Dialog, DialogContentText } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport { formatearNombre } from '../../utils/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  option: {\n    fontSize: 15,\n    '& > span': {\n      marginRight: 10,\n      fontSize: 18\n    }\n  },\n  link: {\n    cursor: \"pointer\",\n    color: \"black\"\n  }\n});\nexport default function JefesDeTrabajoSelect(props) {\n  _s();\n\n  //Error al cargar los Jefes de Trabajo desde GEMA\n  const [errorAlCargar, setErrorAlCargar] = React.useState(false);\n\n  const handleClose = () => {\n    setErrorAlCargar(false);\n    props.close();\n  };\n\n  const errorAlCargarDialog = /*#__PURE__*/_jsxDEV(Dialog, {\n    open: errorAlCargar,\n    onClose: handleClose,\n    \"aria-labelledby\": \"error-dialog-title\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      style: {\n        cursor: 'move'\n      },\n      id: \"error-dialog-title\",\n      children: \"Algo ha ocurrido...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: \"No se pudieron cargar los jefes de trabajo. Intente luego de unos momentos y si el error persiste comuniquese con la administraci\\xF3n.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        color: \"primary\",\n        children: \" Cerrar \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n\n  const classes = useStyles();\n  const [jtDeMiUnidad, setJtDeMiUnidad] = React.useState(true);\n  const [disabled, setDisabled] = React.useState(false);\n  const [state, setState] = React.useContext(AppContext);\n  React.useEffect(() => {\n    limpiarJT(); //controlo cuales JT tebgo que cargar y verifico que no esten precargados\n\n    const todosLosJT = !jtDeMiUnidad;\n    const cargarUnidad = jtDeMiUnidad && !state.jefesDeTrabajosUnidad[props.unidad];\n    const cargarTodos = todosLosJT && !state.jefesDeTrabajos;\n\n    if (cargarUnidad || cargarTodos) {\n      setDisabled(true);\n      var url = cargarUnidad ? '/utd_nardisjt?lean=1&oslc.select=centro, personid, person{*} &oslc.where=centro=' + props.unidad : '/utd_nardisjt?lean=1&oslc.select=centro, person{*}';\n      if (cargarUnidad && props.unidad === 6300) url = '/utd_nardisjt?lean=1&oslc.select=centro, personid, person{*} &oslc.where=centro in [631,632,633]';\n      var jts = [];\n      var cedulas = [];\n      serviciosGEMA.get(url).then(function (response) {\n        response.data.member.map(e => {\n          if (e.person) {\n            var person = e.person[0];\n            var jt = {};\n            jt.ci = person.personid;\n            jt.ut = person.utd_nrounico ? person.utd_nrounico : \"\";\n            jt.nombre = person.firstname + \" \" + person.lastname;\n\n            if (jt.ci && !cedulas[jt.ci]) {\n              jts.push(jt);\n              cedulas[jt.ci] = true;\n            }\n          }\n        });\n\n        if (cargarUnidad) {\n          var jefesDeTrabajosUnidad_ = { ...state.jefesDeTrabajosUnidad\n          };\n          jefesDeTrabajosUnidad_[props.unidad] = jts;\n          setState({ ...state,\n            jefesDeTrabajosUnidad: jefesDeTrabajosUnidad_\n          });\n        } else setState({ ...state,\n          jefesDeTrabajos: jts\n        });\n\n        setDisabled(false);\n      }).catch(error => setErrorAlCargar(true));\n    }\n  }, [jtDeMiUnidad]);\n\n  const toogleJtDeMiUidad = () => {\n    setJtDeMiUnidad(!jtDeMiUnidad);\n  };\n\n  const jefesDeTrabajos = jtDeMiUnidad ? state.jefesDeTrabajosUnidad[props.unidad] : state.jefesDeTrabajos;\n\n  const limpiarJT = (event, value) => {\n    props.setSelectedJT_ci(\"\");\n  };\n\n  const contenido = /*#__PURE__*/_jsxDEV(Box, {\n    style: {\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n      onChange: (event, value) => limpiarJT(event, value),\n      onBlur: (event, value) => limpiarJT(event, value),\n      id: \"jefes-de-trabajo\",\n      options: jefesDeTrabajos,\n      classes: {\n        option: classes.option\n      },\n      autoHighlight: true,\n      noOptionsText: \"No se encontraron coincidencias.\",\n      disabled: disabled,\n      getOptionLabel: option => {\n        props.setSelectedJT_ci(option.ci);\n        return formatearNombre(option.nombre) + \" (\" + option.ci + \") (\" + option.ut + \")\";\n      },\n      renderOption: option => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: formatearNombre(option.nombre)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this),\n      renderInput: params => disabled ? /*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: \"Cargando datos ...\",\n        ...params,\n        variant: \"outlined\",\n        id: \"jts\",\n        InputProps: {\n          style: {\n            color: 'black'\n          },\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"cargando datos...\",\n              src: \"/PAW/assets/images/loading.gif\",\n              width: \"60px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 19\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: \"Buscar por nombre, CI o UT ...\",\n        ...params,\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }, this)\n    }, \"jefes-de-trabajo\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        defaultChecked: true,\n        color: \"default\",\n        inputProps: {\n          'aria-label': 'checkbox with default color'\n        },\n        onClick: toogleJtDeMiUidad,\n        disabled: disabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this),\n      label: \"Ver solo personas de mi unidad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), errorAlCargarDialog]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 10\n    },\n    children: [/*#__PURE__*/_jsxDEV(Hidden, {\n      only: \"xs\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"left\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"\",\n            src: \"/PAW/assets/images/user.svg\",\n            style: {\n              height: 35,\n              width: 35,\n              marginRight: 15,\n              marginTop: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), contenido]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n      smUp: true,\n      children: contenido\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n}\n\n_s(JefesDeTrabajoSelect, \"XAHXRzyepZCE5xOLSm036/xFg/g=\", false, function () {\n  return [useStyles];\n});\n\n_c = JefesDeTrabajoSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"JefesDeTrabajoSelect\");","map":{"version":3,"sources":["C:/Users/d896422/Documents/hello/paw_code/src/components/inputs/jefesDeTrabajoSelect.js"],"names":["React","TextField","Box","FormControlLabel","Checkbox","InputAdornment","Hidden","Autocomplete","makeStyles","AppContext","serviciosGEMA","DialogActions","DialogContent","DialogTitle","Dialog","DialogContentText","Button","formatearNombre","useStyles","option","fontSize","marginRight","link","cursor","color","JefesDeTrabajoSelect","props","errorAlCargar","setErrorAlCargar","useState","handleClose","close","errorAlCargarDialog","classes","jtDeMiUnidad","setJtDeMiUnidad","disabled","setDisabled","state","setState","useContext","useEffect","limpiarJT","todosLosJT","cargarUnidad","jefesDeTrabajosUnidad","unidad","cargarTodos","jefesDeTrabajos","url","jts","cedulas","get","then","response","data","member","map","e","person","jt","ci","personid","ut","utd_nrounico","nombre","firstname","lastname","push","jefesDeTrabajosUnidad_","catch","error","toogleJtDeMiUidad","event","value","setSelectedJT_ci","contenido","width","params","style","endAdornment","marginBottom","height","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  TextField,\r\n  Box,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  InputAdornment,\r\n  Hidden,\r\n} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppContext } from '../../appProvider';\r\nimport { serviciosGEMA } from '../../servicios/servicios';\r\nimport {\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Dialog,\r\n  DialogContentText\r\n} from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport { formatearNombre } from '../../utils/utils';\r\n\r\nconst useStyles = makeStyles({\r\n  option: {\r\n    fontSize: 15,\r\n    '& > span': {\r\n      marginRight: 10,\r\n      fontSize: 18,\r\n    },\r\n  },\r\n  link: {\r\n    cursor: \"pointer\",\r\n    color: \"black\"\r\n  }\r\n});\r\n\r\n\r\nexport default function JefesDeTrabajoSelect(props) {\r\n\r\n\r\n  //Error al cargar los Jefes de Trabajo desde GEMA\r\n  const [errorAlCargar, setErrorAlCargar] = React.useState(false);\r\n\r\n  const handleClose = () => {\r\n    setErrorAlCargar(false);\r\n    props.close()\r\n  }\r\n\r\n  const errorAlCargarDialog = (\r\n    <Dialog\r\n      open={errorAlCargar}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"error-dialog-title\"\r\n    >\r\n      <DialogTitle style={{ cursor: 'move' }} id=\"error-dialog-title\">\r\n        Algo ha ocurrido...\r\n      </DialogTitle>\r\n\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          No se pudieron cargar los jefes de trabajo. Intente luego de unos momentos y\r\n          si el error persiste comuniquese con la administración.\r\n        </DialogContentText>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\"> Cerrar </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n\r\n\r\n  const classes = useStyles();\r\n\r\n  const [jtDeMiUnidad, setJtDeMiUnidad] = React.useState(true);\r\n  const [disabled, setDisabled] = React.useState(false);\r\n  const [state, setState] = React.useContext(AppContext);\r\n\r\n\r\n  React.useEffect(() => {\r\n\r\n    limpiarJT();\r\n\r\n    //controlo cuales JT tebgo que cargar y verifico que no esten precargados\r\n    const todosLosJT = !jtDeMiUnidad;\r\n\r\n    const cargarUnidad = jtDeMiUnidad && !state.jefesDeTrabajosUnidad[props.unidad];\r\n    const cargarTodos = todosLosJT && !state.jefesDeTrabajos;\r\n\r\n\r\n    if (cargarUnidad || cargarTodos) {\r\n      setDisabled(true);\r\n      var url = (cargarUnidad)\r\n        ? '/utd_nardisjt?lean=1&oslc.select=centro, personid, person{*} &oslc.where=centro=' + props.unidad\r\n        : '/utd_nardisjt?lean=1&oslc.select=centro, person{*}';\r\n\r\n      if (cargarUnidad && props.unidad === 6300)\r\n        url = '/utd_nardisjt?lean=1&oslc.select=centro, personid, person{*} &oslc.where=centro in [631,632,633]'\r\n\r\n\r\n      var jts = [];\r\n      var cedulas = [];\r\n      serviciosGEMA.get(url)\r\n        .then(function (response) {\r\n          response.data.member\r\n            .map(e => {\r\n              if (e.person) {\r\n                var person = e.person[0];\r\n                var jt = {};\r\n                jt.ci = person.personid;\r\n                jt.ut = (person.utd_nrounico) ? person.utd_nrounico : \"\";\r\n                jt.nombre = person.firstname + \" \" + person.lastname;\r\n                if (jt.ci && !cedulas[jt.ci]) {\r\n                  jts.push(jt);\r\n                  cedulas[jt.ci] = true;\r\n                }\r\n              }\r\n            });\r\n          if (cargarUnidad) {\r\n            var jefesDeTrabajosUnidad_ = { ...state.jefesDeTrabajosUnidad };\r\n            jefesDeTrabajosUnidad_[props.unidad] = jts\r\n            setState({ ...state, jefesDeTrabajosUnidad: jefesDeTrabajosUnidad_ });\r\n          }\r\n          else setState({ ...state, jefesDeTrabajos: jts });\r\n          setDisabled(false);\r\n        })\r\n        .catch(error => setErrorAlCargar(true))\r\n    }\r\n  }, [jtDeMiUnidad]);\r\n\r\n\r\n\r\n  const toogleJtDeMiUidad = () => {\r\n    setJtDeMiUnidad(!jtDeMiUnidad);\r\n  }\r\n\r\n\r\n  const jefesDeTrabajos = (jtDeMiUnidad)\r\n    ? state.jefesDeTrabajosUnidad[props.unidad]\r\n    : state.jefesDeTrabajos;\r\n\r\n\r\n  const limpiarJT = (event, value) => {\r\n    props.setSelectedJT_ci(\"\");\r\n  }\r\n\r\n\r\n  const contenido = (\r\n    <Box style={{ width: \"100%\" }}>\r\n      <Autocomplete\r\n        onChange={(event, value) => limpiarJT(event, value)}\r\n        onBlur={(event, value) => limpiarJT(event, value)}\r\n        key=\"jefes-de-trabajo\"\r\n        id=\"jefes-de-trabajo\"\r\n        options={jefesDeTrabajos}\r\n        classes={{ option: classes.option, }}\r\n        autoHighlight\r\n        noOptionsText={\"No se encontraron coincidencias.\"}\r\n        disabled={disabled}\r\n        getOptionLabel={(option) => {\r\n          props.setSelectedJT_ci(option.ci);\r\n          return formatearNombre(option.nombre) + \" (\" + option.ci + \") (\" + option.ut + \")\"\r\n        }}\r\n        renderOption={(option) => (\r\n          <React.Fragment>\r\n            <span>{formatearNombre(option.nombre)}</span>\r\n          </React.Fragment>\r\n        )}\r\n\r\n        renderInput={(params) => (\r\n          disabled\r\n            ?\r\n\r\n            <TextField\r\n              placeholder=\"Cargando datos ...\"\r\n              {...params}\r\n              variant=\"outlined\"\r\n              id=\"jts\"\r\n              InputProps={{\r\n                style: { color: 'black' },\r\n                endAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <img alt=\"cargando datos...\" src=\"/PAW/assets/images/loading.gif\" width=\"60px\" />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n            :\r\n            <TextField\r\n              placeholder=\"Buscar por nombre, CI o UT ...\"\r\n              {...params}\r\n              variant=\"outlined\"\r\n            />\r\n\r\n\r\n        )}\r\n      />\r\n\r\n\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            defaultChecked\r\n            color=\"default\"\r\n            inputProps={{ 'aria-label': 'checkbox with default color' }}\r\n            onClick={toogleJtDeMiUidad}\r\n            disabled={disabled}\r\n          />\r\n        }\r\n        label=\"Ver solo personas de mi unidad\"\r\n      />\r\n\r\n      {errorAlCargarDialog}\r\n    </Box>\r\n  )\r\n\r\n  return (\r\n    <div style={{ marginBottom: 10 }}>\r\n      <Hidden only=\"xs\">\r\n        <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"left\">\r\n          <Box>\r\n            <img\r\n              alt=\"\"\r\n              src=\"/PAW/assets/images/user.svg\"\r\n              style={{ height: 35, width: 35, marginRight: 15, marginTop: 10 }}\r\n            />\r\n          </Box>\r\n          {contenido}\r\n        </Box>\r\n      </Hidden>\r\n      <Hidden smUp>\r\n        {contenido}\r\n      </Hidden>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}