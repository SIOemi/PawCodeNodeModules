{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\d896422\\\\Documents\\\\hello\\\\paw_code\\\\src\\\\components\\\\listaDiscos\\\\listaDiscos.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport BarraSuperiorActivos from './barraSuperiorActivos';\nimport BarraSuperiorTodos from './barraSuperiorTodos';\nimport Incidencia from '../incidencia/incidencia';\nimport { serviciosGEMA } from '../../servicios/servicios';\nimport { AppContext } from '../../appProvider';\nimport { Box, Button, Hidden, Fab, Tooltip } from '@material-ui/core';\nimport RefreshOutlinedIcon from '@material-ui/icons/RefreshOutlined';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Titulo from '../layout/titulo'; //import axios from 'axios';\n\nimport dateFormat, { masks } from \"dateformat\";\nimport ResumenIncidencias from './resumenIncidencias'; //Acciones sobre DU\n\nimport Asignar from '../discoUnidad/acciones/asignar';\nimport SolicitarFirma from '../discoUnidad/acciones/solicitarFirma';\nimport FirmarDU from '../discoUnidad/acciones/firmarDU';\nimport CancelarFirma from '../discoUnidad/acciones/cancelarFirma';\nimport Desasignar from '../discoUnidad/acciones/desasignar';\nimport Eliminar from '../discoUnidad/acciones/eliminar'; //Acciones sobre DT\n\nimport Comunicar from '../discoTrabajo/acciones/comunicar';\nimport Firmar from '../discoTrabajo/acciones/firmar';\nimport Sustituir from '../discoTrabajo/acciones/sustituir';\nimport Colocar from '../discoTrabajo/acciones/colocar';\nimport Extraviado from '../discoTrabajo/acciones/extraviado';\nimport { obtenerNombrePersonaLstDiscos as obtenerNombrePersona } from '../../utils/utils';\nimport Typography from '@material-ui/core/Typography';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(3),\n    right: theme.spacing(4)\n  }\n}));\nconst BlackTooltip = withStyles({\n  tooltip: {\n    color: \"white\",\n    backgroundColor: \"black\",\n    fontSize: 16\n  }\n})(Tooltip);\n\nconst ListaDiscos = props => {\n  _s();\n\n  const classes = useStyles();\n  const [state, setState] = React.useContext(AppContext);\n  const [renderList, setRenderList] = React.useState(true);\n  const [loading, setLoading] = React.useState(true); //Error al cargar\n\n  const [errorAlCargar, setErrorAlCargar] = React.useState(false); //Incidencias\n\n  const [incidencias, setIncidencias] = React.useState([]);\n  const [fechasIncidencias, setFechasIncidencias] = React.useState(null); //solicitudes GEMA\n\n  const [solicitudesGEMA, setSolicitudesGEMA] = React.useState([]);\n\n  const asociarSolicitud = (solicitudSIO, solicitudGEMA) => {\n    let solicitudes = solicitudesGEMA;\n    solicitudes[solicitudSIO] = solicitudGEMA;\n    setSolicitudesGEMA(solicitudes);\n  }; //Busqueda\n\n\n  const [buscarPor, setBuscarPor] = React.useState(-1);\n  const [valorBusqueda, setValorBusqueda] = React.useState(null);\n  const [fechaDesde, setFechaDesde] = React.useState(null);\n  const [fechaHasta, setFechaHasta] = React.useState(null);\n  const [unidadBusqueda, setUnidadBusqueda] = React.useState(\"0\");\n  const [infoFechas, setInfoFechas] = React.useState(null); //ultima actualización de datos\n\n  const [ultimaActualizacion, setUltimaActualizacion] = React.useState(Date.now());\n  const [diferenciaFechas, setDiferenciaFechas] = React.useState(\"\"); //Carga de datos\n\n  const convertirEstado = estadoGEMA => {\n    if (estadoGEMA === 'PLANIFICADO') return \"planificado\";\n    if (estadoGEMA === 'COMUNICADO') return \"comunicado\";\n    if (estadoGEMA === 'COLOCADO') return \"colocado\";\n    if (estadoGEMA === 'ENVIADO') return \"colocado\"; //para discos nominados\n\n    if (estadoGEMA === 'FIRMADO') return \"finalizado\";\n    if (estadoGEMA === 'DESASIGNADO') return \"desasignado\";\n    if (estadoGEMA === 'RETIRADO') return \"retirado\";\n    if (estadoGEMA === 'ELIMINADO') return \"eliminado\";\n    return \"\";\n  };\n\n  const formatearUbicacion = ubicacion => ubicacion.split(\"|\").join(\"❭\");\n\n  const procesarMembers = (members, tipo, ids) => {\n    //Recorro todos los members para obtener la relacion entre las solicitudes de SIO y GEMA\n    members.map(e => {\n      if (e.ticket) {\n        let solicitudGEMA = e.ticket && e.ticket[0] ? e.ticket[0].ticketid : null;\n        asociarSolicitud(e.solicitud, solicitudGEMA);\n      }\n    });\n\n    const procesarDT = members => {\n      var discos_trabajos = {}; //(key, value) = (id DU padre, DT)\n\n      members.map(e => {\n        if (e.tipo === \"DT\" && e.status !== \"DESASIGNADO\") {\n          var dt = {};\n          dt.fecha = e.statusdate;\n          dt.id = e.utd_nardisdiscoid;\n          dt.extraviado = e.extraviado;\n          dt.unidad = e.unidad;\n          dt.solicitud = e.solicitud ? e.solicitud : \"0\";\n          dt.numero = e.status !== \"PLANIFICADO\" && e.status !== \"COMUNICADO\" ? e.nrodisco : \"\";\n          dt.nombre = obtenerNombrePersona(e.jefetrabajo, e.person, false);\n          dt.nombreCompleto = obtenerNombrePersona(e.jefetrabajo, e.person, true);\n          dt.estado = e.status ? convertirEstado(e.status) : \"\";\n          dt.historico = [];\n          if (!discos_trabajos[e.padre]) discos_trabajos[e.padre] = [];\n          discos_trabajos[e.padre].push(dt);\n        }\n      });\n      return discos_trabajos;\n    };\n\n    const procesarDU = (members, discos_trabajos) => {\n      var incidencias_ = [];\n      members.map(e => {\n        if (e.tipo === \"DU\" && e.status !== \"ELIMINADO\" && e.status !== \"COLOCADO\") {\n          var inc = e.incidencia;\n          var sol = e.solicitud ? e.solicitud : \"0\";\n          var key = inc; //+ \"-\" + sol;\n\n          if (!incidencias_[key]) {\n            var inc_ = {};\n            inc_.discosUnidad = [];\n            inc_.discosNominados = [];\n            incidencias_[key] = inc_;\n          }\n\n          incidencias_[key].incidencia = inc;\n          incidencias_[key].solicitud = sol;\n          incidencias_[key].descIncidencia = '';\n          var discoUnidad = {};\n          discoUnidad.fecha = e.statusdate;\n          discoUnidad.historico = [];\n          discoUnidad.firmaSolicitada = e.status === 'FIRM_SOL';\n          discoUnidad.firmaPlanificada = e.status === 'FIRMPLA';\n          discoUnidad.encargadoFirma = '';\n          discoUnidad.latitud = e.latitud;\n          discoUnidad.longitud = e.longitud;\n          discoUnidad.encargadoFirmaCI = e.jefetrabajo;\n          if ((e.status === 'FIRM_SOL' || e.status === 'FIRMPLA') && e.person) discoUnidad.encargadoFirma = obtenerNombrePersona(e.jefetrabajo, e.person, false);\n          discoUnidad.id = e.utd_nardisdiscoid;\n          discoUnidad.extraviado = e.extraviado;\n          discoUnidad.numero = e.nrodisco;\n          discoUnidad.unidad = e.unidad;\n          discoUnidad.ubicacion = formatearUbicacion(e.ubicacion);\n          discoUnidad.solicitud = e.solicitud ? e.solicitud : \"0\"; //nombre del JT\n\n          discoUnidad.jefeDeTrabajos = obtenerNombrePersona(e.jefetrabajo, e.person, false);\n          discoUnidad.jefeDeTrabajosCompleto = obtenerNombrePersona(e.jefetrabajo, e.person, true);\n          discoUnidad.estado = convertirEstado(e.status); //agrego los DT y le asigno a cada DT la unicacion de su DU padre\n\n          var discosTrabajo = discos_trabajos[e.utd_nardisdiscoid];\n          if (discosTrabajo) discosTrabajo = discosTrabajo.map(e => {\n            e.ubicacion = formatearUbicacion(discoUnidad.ubicacion);\n            return e;\n          });\n          discoUnidad.discosTrabajos = discosTrabajo ? discosTrabajo : [];\n          incidencias_[key].discosUnidad.push(discoUnidad);\n        }\n      });\n      return incidencias_;\n    };\n\n    if (tipo === \"NUMEROS\") {\n      //En member se obtienen todos los discos con el numero pasado por parametro\n      //Se agrega a members los discos faltantes para completar la visualizacion\n      //Si es un DT, se carga su DU padre y sus hermanos\n      //Si es es un DN no se carga nada mas\n      //Si es un DU, se carga todos los DT hijos\n      //1) se obtienen todos los id de los DU a mostrar y secargan en members_\n      var members_id = [];\n\n      for (let i in members) {\n        var disco = members[i];\n        if (disco.tipo === \"DT\" && !members_id.includes(disco.padre)) members_id.push(disco.padre);\n        if (disco.tipo === \"DU\" && !members_id.includes(disco.utd_nardisdiscoid)) members_id.push(disco.utd_nardisdiscoid);\n      }\n\n      var members_ = [];\n\n      if (members_id.length === 0) {\n        //entra aca cuando en members solo hay DN\n        var incidencias_ = []; //obtengo todos los DN de members\n        //a priori son todos\n\n        var discos_nominados_members = [];\n\n        for (let i in members) {\n          if (members[i].tipo === \"DN\") discos_nominados_members.push(members[i]);\n        } //agrego los DN a las incidencias_\n\n\n        for (let i in discos_nominados_members) {\n          var dn = {};\n          var e = discos_nominados_members[i];\n          dn.fecha = e.statusdate;\n          dn.id = e.utd_nardisdiscoid;\n          dn.ubicacion = formatearUbicacion(e.ubicacion);\n          dn.extraviado = e.extraviado;\n          dn.unidad = e.unidad;\n          dn.latitud = e.latitud;\n          dn.longitud = e.longitud;\n          dn.numero = e.nrodisco;\n          dn.nombre = obtenerNombrePersona(e.jefetrabajo, e.person, false);\n          dn.nombreCompleto = obtenerNombrePersona(e.jefetrabajo, e.person, true);\n          dn.estado = e.status ? convertirEstado(e.status) : \"\";\n          dn.solicitud = e.solicitud ? e.solicitud : \"0\";\n          dn.historico = [];\n          var inc = e.incidencia;\n          var sol = e.solicitud ? e.solicitud : \"0\";\n          var key = inc; //+ \"-\" + sol;\n\n          if (!incidencias_[key]) incidencias_[key] = {\n            discosUnidad: [],\n            incidencia: inc,\n            solicitud: sol,\n            descIncidencia: \"\"\n          };\n          if (!incidencias_[key].discosNominados) incidencias_[key].discosNominados = [];\n          incidencias_[key].discosNominados.push(dn);\n        }\n\n        var listaIncidencias = [];\n        var ids_ = {}; //diccionario (id DU, indice en listaIncidencias del DU)\n\n        var indx = 0; //por que for y no map y por que es var y no let o const //ER\n\n        for (var e in incidencias_) {\n          listaIncidencias.push(incidencias_[e]);\n          ids_[incidencias_[e].id] = indx;\n          indx = indx + 1;\n        }\n\n        setIncidencias(listaIncidencias);\n        setLoading(false);\n        return;\n      } else {\n        var url = baseUrl(query_params) + \"utd_nardisdiscoid in [\" + members_id + \"]\";\n        serviciosGEMA.get(url).then(response => {\n          members_ = response.data.member; //2) se obtienen todos los DT que tienen como padre alguno \n          //de los DU en members_ y se agregan a members\n\n          url = baseUrl(query_params) + \"padre in [\" + members_id + \"]\";\n          serviciosGEMA.get(url).then(response => {\n            var membersDT_ = response.data.member;\n            members_ = [...members_, ...membersDT_]; //Discos de Trabajo\n\n            var discos_trabajos = procesarDT(members_); //Discos a Unidad\n\n            var incidencias_ = procesarDU(members_, discos_trabajos); //3) por ultimo se agregan a members_ los DN de members\n\n            var discos_nominados_members = [];\n\n            for (let i in members) {\n              if (members[i].tipo === \"DN\") discos_nominados_members.push(members[i]);\n            } //agrego los DN a las incidencias_\n\n\n            for (let i in discos_nominados_members) {\n              var dn = {};\n              var e = discos_nominados_members[i];\n              dn.fecha = e.statusdate;\n              dn.id = e.utd_nardisdiscoid;\n              dn.ubicacion = formatearUbicacion(e.ubicacion);\n              dn.unidad = e.unidad;\n              dn.extraviado = e.extraviado;\n              dn.latitud = e.latitud;\n              dn.longitud = e.longitud;\n              dn.numero = e.nrodisco;\n              dn.nombre = obtenerNombrePersona(e.jefetrabajo, e.person, false);\n              dn.nombreCompleto = obtenerNombrePersona(e.jefetrabajo, e.person, true);\n              dn.estado = e.status ? convertirEstado(e.status) : \"\";\n              dn.solicitud = e.solicitud ? e.solicitud : \"0\";\n              dn.historico = [];\n              var inc = e.incidencia;\n              var sol = e.solicitud ? e.solicitud : \"0\";\n              var key = inc; //+ \"-\" + sol;\n\n              if (!incidencias_[key]) incidencias_[key] = {\n                discosUnidad: [],\n                incidencia: inc,\n                solicitud: sol,\n                descIncidencia: \"\"\n              };\n              if (!incidencias_[key].discosNominados) incidencias_[key].discosNominados = [];\n              incidencias_[key].discosNominados.push(dn);\n            }\n\n            var listaIncidencias = [];\n            var ids_ = {}; //diccionario (id DU, indice en listaIncidencias del DU)\n\n            var indx = 0;\n\n            for (var e in incidencias_) {\n              listaIncidencias.push(incidencias_[e]);\n              ids_[incidencias_[e].id] = indx;\n              indx = indx + 1;\n            }\n\n            setIncidencias(listaIncidencias);\n            setLoading(false);\n            return;\n          }).catch(error => {\n            setIncidencias([]);\n            setLoading(false);\n            setErrorAlCargar(true);\n            alert(\"Error al procesar members. (2): \" + error);\n          });\n        }).catch(error => {\n          setIncidencias([]);\n          setErrorAlCargar(true);\n          setLoading(false);\n          alert(\"Error al procesar members. (1): \" + error);\n        });\n      }\n    } else if (tipo === \"DISCOUNIDAD\") {\n      //Discos de Trabajo\n      var discos_trabajos = procesarDT(members); //Discos a Unidad\n\n      var incidencias_ = procesarDU(members, discos_trabajos);\n      var listaIncidencias = [];\n      var ids_ = {}; //diccionario (id DU, indice en listaIncidencias del DU)\n\n      var indx = 0;\n\n      for (var e in incidencias_) {\n        listaIncidencias.push(incidencias_[e]);\n        ids_[incidencias_[e].id] = indx;\n        indx = indx + 1;\n      }\n\n      setIncidencias(listaIncidencias);\n      setLoading(false);\n      return;\n    } else {\n      var url = \"\";\n      if (tipo === \"TODOS\") var url = \"unidad=\" + state.unidad + \" and tipo=\\\"DN\\\"\";else if (tipo === \"ACTIVOS\") url = \"unidad=\" + state.unidad + \" and status=\\\"ENVIADO\\\" and tipo=\\\"DN\\\"\";else if (tipo === \"INCIDENCIA\") url = \"incidencia=\\\"\" + ids + \"\\\" and tipo=\\\"DN\\\"\";else if (tipo === \"NOMINADOS\") url = \"incidencia=\\\"\" + ids + \"\\\" and tipo=\\\"DN\\\"\";else if (tipo === \"NOMINADO\") url = \"utd_nardisdiscoid=\" + ids + \" and tipo=\\\"DN\\\"\";else if (tipo === \"SOLICITUD\") url = \"solicitud=\\\"\" + ids + \"\\\" and tipo=\\\"DN\\\"\"; //else if (tipo === \"FECHA\") url = \"statusdate>=\\\"\"+ ids.f_desde + \"\\\" and statusdate<=\\\"\"+ ids.f_hasta + \"\\\" and unidad=\" + ids.unidadBusqueda +\" and tipo=\\\"DN\\\"\";\n      else if (tipo === \"FECHA\") url = \"incidencia in [\" + ids + \"] and tipo=\\\"DN\\\"\";\n      url = baseUrl(query_params) + url;\n      if (tipo !== \"ACTIVOS\") url += \" and status in [\\\"ENVIADO\\\",\\\"FIRMADO\\\",\\\"RETIRADO\\\"]\";\n      serviciosGEMA.get(url).then(response => {\n        var listaIncidencias = [];\n\n        if (members.length !== 0) {\n          //Discos de Trabajo\n          var discos_trabajos = procesarDT(members); //Discos a Unidad\n\n          var incidencias_ = procesarDU(members, discos_trabajos);\n        } else {\n          //Discos a Unidad\n          var incidencias_ = [];\n        }\n\n        var discos_nominados_members = response.data.member; //agrego los DN a las incidencias_\n\n        for (let i in discos_nominados_members) {\n          var dn = {};\n          var e = discos_nominados_members[i];\n          dn.id = e.utd_nardisdiscoid;\n          dn.ubicacion = formatearUbicacion(e.ubicacion);\n          dn.unidad = e.unidad;\n          dn.extraviado = e.extraviado;\n          dn.latitud = e.latitud;\n          dn.fecha = e.statusdate;\n          dn.longitud = e.longitud;\n          dn.numero = e.nrodisco;\n          dn.nombre = obtenerNombrePersona(e.jefetrabajo, e.person, false);\n          dn.nombreCompleto = obtenerNombrePersona(e.jefetrabajo, e.person, true);\n          dn.estado = e.status ? convertirEstado(e.status) : \"\";\n          dn.solicitud = e.solicitud ? e.solicitud : \"0\";\n          dn.historico = [];\n          var inc = e.incidencia;\n          var sol = e.solicitud ? e.solicitud : \"0\";\n          var key = inc; //+ \"-\" + sol;\n\n          if (!incidencias_[key]) incidencias_[key] = {\n            discosUnidad: [],\n            incidencia: inc,\n            solicitud: sol,\n            descIncidencia: \"\"\n          };\n          if (!incidencias_[key].discosNominados) incidencias_[key].discosNominados = [];\n          incidencias_[key].discosNominados.push(dn);\n        }\n\n        var ids_ = {}; //diccionario (id DU, indice en listaIncidencias del DU)\n\n        var indx = 0;\n\n        for (var e in incidencias_) {\n          listaIncidencias.push(incidencias_[e]);\n          ids_[incidencias_[e].id] = indx;\n          indx = indx + 1;\n        }\n\n        setIncidencias(listaIncidencias);\n        setLoading(false);\n      }).catch(error => {\n        setIncidencias([]);\n        setErrorAlCargar(true);\n        setLoading(false);\n        alert(\"Error al procesar members..: \" + error);\n      });\n    }\n  };\n\n  const {\n    id\n  } = useParams();\n  const CONFIG = window.data;\n  var query_params = \"status,ticket, status_description, tipo, changeby, incidencia, jefetrabajo, nrodisco, padre, unidad, solicitud, utd_nardisdiscoid, person, ubicacion, extraviado, latitud, longitud, statusdate  \";\n\n  const baseUrl = query_params => \"/utd_nardisdisco?lean=1&oslc.select=\" + query_params + \"&_dropnulls=0&oslc.where=\";\n\n  const cargarDu = (idDU, numeroDU) => {\n    var url = idDU ? baseUrl(query_params) + \"UTD_NARDISDISCOID=\" + idDU : baseUrl(query_params) + \"nrodisco=\\\"\" + numeroDU + \"\\\"\";\n    serviciosGEMA.get(url).then(response => {\n      var du = response.data.member;\n      url = baseUrl(query_params) + \"padre=\" + du[0].utd_nardisdiscoid;\n      serviciosGEMA.get(url).then(response => {\n        var members = response.data.member;\n        members.push(du[0]);\n        procesarMembers(members, \"DISCOUNIDAD\", null);\n      }).catch(error => alert(\"Error al cargar DT asociados al DU: \" + error));\n    }).catch(error => alert(\"Error al cargar el DU: \" + error));\n  };\n\n  const cargarDisco = (id, numero) => {\n    var url = id ? baseUrl(query_params) + \"UTD_NARDISDISCOID=\" + id : baseUrl(query_params) + \"nrodisco=\\\"\" + numero + \"\\\"\";\n    if (!numero || numero === \"\") procesarMembers([], \"DISCO\", null); //solucion a problema a discos que quedaron sin numero\n    else {\n      serviciosGEMA.get(url).then(response => {\n        var member = response.data.member;\n\n        if (member && member.length > 0) {\n          if (member[0].tipo === \"DT\") cargarDu(member[0].padre, false);else if (member[0].tipo === \"DN\") cargarNominado(member[0].utd_nardisdiscoid);else cargarDu(id, numero);\n        } else procesarMembers([], \"DISCO\", null);\n      }).catch(error => {\n        setIncidencias([]);\n        setErrorAlCargar(true);\n        setLoading(false);\n        alert(\"Error al cargar el Disco..: \" + error);\n      });\n    }\n  };\n\n  const cargarDiscosPorNumero = (numero, buscarEnMiUidad) => {\n    setState(state => {\n      return { ...state,\n        numeroDiscoResaltado: numero\n      };\n    });\n    var url = baseUrl(query_params) + \"nrodisco=\\\"\" + numero + \"\\\"\";\n    if (buscarEnMiUidad) url = url + \" and unidad=\" + state.unidad;\n    serviciosGEMA.get(url).then(response => {\n      var member = response.data.member; //en member se cargan todos los discos con el numero pasado por parametro\n\n      procesarMembers(member, \"NUMEROS\", null);\n    }).catch(error => {\n      setIncidencias([]);\n      setErrorAlCargar(true);\n      setLoading(false);\n      alert(\"Error al cargar los discos con numero \" + numero + \": \" + error);\n    });\n  };\n\n  const cargarNominado = id => {\n    procesarMembers([], \"NOMINADO\", id);\n  };\n\n  const cargarPorSolicitud = idSol => {\n    var url = buscarPorIDsio ? baseUrl(query_params) + \"solicitud=\" + idSol : baseUrl(query_params) + 'UTD_SOLGEMA.ticketid=' + idSol;\n    serviciosGEMA.get(url).then(response => {\n      const id = buscarPorIDsio ? idSol : response.data.member[0].solicitud;\n      procesarMembers(response.data.member, \"SOLICITUD\", id);\n    }).catch(error => {\n      setIncidencias([]);\n      setErrorAlCargar(true);\n      setLoading(false);\n      alert(\"Error al cargar discos de una solicitud: \" + error);\n    });\n  };\n\n  function formatDate(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n    return [year, month, day].join('-');\n  }\n\n  const validarEstado = (tipo, estado) => {\n    let statusDT = [\"COMUNICADO\", \"PLANIFICADO\", \"COLOCADO\", \"FIRMADO\"];\n    let statusDN = [\"ENVIADO\", \"FIRMADO\", \"RETIRADO\"];\n    let statusDU = [\"ENVIADO\", \"FIRM_SOL\", \"FIRMPLA\", \"FIRMADO\", \"RETIRADO\"];\n    return tipo === \"DT\" && statusDT.includes(estado) || tipo === \"DN\" && statusDN.includes(estado) || tipo === \"DU\" && statusDU.includes(estado);\n  };\n\n  const cargarPorFecha = (desde, hasta, unidadBusqueda) => {\n    setIncidencias([]);\n    setFechasIncidencias({});\n    const f_desde = dateFormat(new Date(parseInt(desde)), \"isoUtcDateTime\");\n    const f_hasta = dateFormat(new Date(parseInt(hasta)), \"isoUtcDateTime\");\n    let url = baseUrl(query_params) + \"statusdate>=\\\"\" + f_desde + \"\\\" and statusdate<=\\\"\" + f_hasta + \"\\\" and unidad=\" + unidadBusqueda; // + \" and status in \" + status;\n\n    setFechasIncidencias({});\n    serviciosGEMA.get(url).then(response => {\n      let incidencias = [];\n      console.log(response.data.member);\n      response.data.member.map(e => {\n        if (!incidencias.includes(e.incidencia) && validarEstado(e.tipo, e.status)) incidencias = incidencias.concat(e.incidencia);\n      });\n      let url = baseUrl(query_params) + \"incidencia in [\" + incidencias + \"] and unidad=\" + unidadBusqueda;\n      serviciosGEMA.get(url).then(response => procesarMembers(response.data.member, \"FECHA\", incidencias)).catch(error => {\n        setIncidencias([]);\n        setErrorAlCargar(true);\n        setLoading(false);\n        alert(\"Error al cargar discos de una incidencia, intenta nuevamente: \" + error);\n      });\n    }).catch(error => {\n      setIncidencias([]);\n      setErrorAlCargar(true);\n      setLoading(false);\n      alert(\"Error al cargar discos de una incidencia, intenta nuevamente: \" + error);\n    });\n  };\n\n  const cargarIncidencia = idInc => {\n    if (props.nominados) procesarMembers([], \"NOMINADOS\", idInc);else {\n      var url = baseUrl(query_params) + \"incidencia=\" + idInc;\n      serviciosGEMA.get(url).then(response => procesarMembers(response.data.member, \"INCIDENCIA\", idInc)).catch(error => {\n        setIncidencias([]);\n        setErrorAlCargar(true);\n        setLoading(false);\n        alert(\"Error al cargar discos de una incidencia: \" + error);\n      });\n    }\n  };\n\n  const cargarListaDiscos = () => {\n    //Cargo los DU y los guardo en members\n    var members = null;\n    var statusActivos = \"[\\\"ENVIADO\\\",\\\"FIRM_SOL\\\",\\\"FIRMPLA\\\"]\";\n    var statusTodos = \"[\\\"ENVIADO\\\",\\\"FIRM_SOL\\\",\\\"FIRMPLA\\\",\\\"FIRMADO\\\",\\\"RETIRADO\\\"]\";\n    var status = props.soloActivos ? statusActivos : statusTodos;\n    var url = baseUrl(query_params) + \"unidad=\" + state.unidad + \" and tipo=\\\"DU\\\" and status in \" + status + \"&collectioncount=1\";\n    serviciosGEMA.get(url).then(response => {\n      members = response.data.member;\n      console.log(members);\n\n      if (members.length !== 0) {\n        //obtengo los id de los DU y cargo los DT\n        var ids_du = members.map(e => e.utd_nardisdiscoid);\n        url = baseUrl(query_params) + \"padre in [\" + ids_du + \"]&collectioncount=1\";\n        serviciosGEMA.get(url).then(response => {\n          members = members.concat(response.data.member);\n          console.log(members);\n          procesarMembers(members, props.soloActivos ? \"ACTIVOS\" : \"TODOS\", null);\n        }).catch(error => {\n          alert(\"Error al cargar los discos de trabajo: \" + error);\n          setErrorAlCargar(true);\n          setLoading(false);\n        });\n      } else procesarMembers([], props.soloActivos ? \"ACTIVOS\" : \"TODOS\", null);\n    }).catch(error => {\n      alert(\"Error al cargar discos activos: \" + error);\n      setErrorAlCargar(true);\n      setLoading(false);\n    });\n  };\n\n  const sumarDias = (fecha, dias) => fecha.setDate(fecha.getDate() + dias); //Filtrado de incidencias\n\n\n  const [filtro, setFiltro] = React.useState('');\n  const cantidad_filtros = filtro === \"\" ? 0 : filtro.split(\",\").length;\n  const resaltadoFiltro = cantidad_filtros === 1 ? filtro.toLocaleLowerCase() : \"\";\n  const cantDiasHist = CONFIG.cantidadDiasHistDiscos; //RENDER\n\n  React.useEffect(() => {\n    if (renderList) {\n      setDiferenciaFechas(\"\");\n      setFechasIncidencias(null);\n      let historial = !(buscarPor === 0 || buscarPor === 1 || buscarPor === 2 || buscarPor === 3 || props.discounidad || props.incidencia || props.nominado || props.soloActivos);\n      const f_desde = buscarPor === 3 ? sumarDias(new Date(fechaDesde), 0) : historial ? sumarDias(new Date(), -(cantDiasHist - 1)) : null;\n      const f_hasta = buscarPor === 3 ? sumarDias(new Date(fechaHasta), 1) : historial ? sumarDias(new Date(), 1) : null;\n      setState(state => {\n        return { ...state,\n          idDU_UltimaAccion: parametros ? parametros.idDU : null,\n          numeroDiscoResaltado: \"\",\n          fechaResaltadaDesde: f_desde,\n          fechaResaltadaHasta: f_hasta\n        };\n      });\n      setInfoFechas(null);\n      setLoading(true);\n      setErrorAlCargar(false);\n      if (buscarPor === 0) cargarIncidencia(valorBusqueda);else if (buscarPor === 1) cargarPorSolicitud(valorBusqueda);else if (buscarPor === 2) cargarDiscosPorNumero(valorBusqueda, buscarEnMiUidad);else if (buscarPor === 3) cargarPorFecha(f_desde, f_hasta, unidadBusqueda);else if (props.discounidad) cargarDu(id, false);else if (props.incidencia) cargarIncidencia(id);else if (props.nominado) cargarNominado(id);else if (props.soloActivos) cargarListaDiscos();else if (props.todos) {\n        cargarPorFecha(f_desde, f_hasta, state.unidad);\n        setInfoFechas(\"Incidencias con discos modificados en los últimos \" + cantDiasHist + \" dias\");\n      }\n      setUltimaActualizacion(Date.now());\n      setRenderList(false);\n    }\n  }, [renderList]);\n  var lista = incidencias;\n\n  if (filtro !== \"\") {\n    lista = incidencias.filter(inc => filtro.split(\",\").map(f_ => {\n      let f = f_.toLowerCase(); //ID incidencia\n\n      let res_inc = f !== \"\" && inc.incidencia.toLowerCase().includes(f); //Nro | nombre | ubicacion DN\n\n      let res_dn = inc.discosNominados.map(dn => f !== \"\" && (dn.numero.toLowerCase().includes(f) || dn.nombre.toLowerCase().includes(f) || dn.ubicacion.toLowerCase().includes(f))).includes(true); //Nro | ubicacion DU\n\n      let res_du = inc.discosUnidad.map(du => f !== \"\" && (du.numero.toLowerCase().includes(f) || du.ubicacion.toLowerCase().includes(f) || //Nro | nombre DT\n      du.discosTrabajos.map(dt => dt.numero.toLowerCase().includes(f) || dt.nombre.toLowerCase().includes(f)).includes(true))).includes(true);\n      return res_inc || res_dn || res_du;\n    }).includes(true));\n  } //Si fechasIncidencias (bsuqueda por fecha) \n  //agrego el parametro fecha a las incidencias y las ordeno por fecha\n\n\n  lista = lista.map(inc => fechasIncidencias ? { ...inc,\n    fecha: fechasIncidencias[inc.incidencia]\n  } : inc);\n  lista = lista.sort((a, b) => {\n    if (a.incidencia > b.incidencia) return -1;\n    if (a.incidencia < b.incidencia) return 1;\n    if (a.solicitud > b.solicitud) return 1;\n    return -1;\n  }); //PARAMETROS / MODALES\n\n  const NINGUN_MODAL = 0;\n  const MODAL_ASIGNAR = 1;\n  const MODAL_ELIMINAR = 2;\n  const MODAL_SOLICITAR_FIRMA = 3;\n  const MODAL_FIRMAR_DU = 4;\n  const MODAL_CANCELAR_FIRMA = 5;\n  const MODAL_DESASIGNAR = 6;\n  const MODAL_FIRMAR_DT = 7;\n  const MODAL_SUSTITUIR = 8;\n  const MODAL_COLOCAR = 9;\n  const MODAL_COMUNICAR = 10;\n  const MODAL_EXTRAVIADO = 11;\n  const [parametros, setParametros] = React.useState(null);\n  const [modalOpened, setModalOpened] = React.useState(NINGUN_MODAL);\n\n  const openModal = (modal, datos_disco) => {\n    setParametros(datos_disco);\n    setModalOpened(modal);\n  };\n\n  const parametrosModal = modal => {\n    return { ...parametros,\n      close: () => setModalOpened(NINGUN_MODAL),\n      open: modalOpened === modal,\n      setRenderList: setRenderList\n    };\n  };\n\n  const accionesDU = {\n    openAsignar: datos_disco => openModal(MODAL_ASIGNAR, datos_disco),\n    openSolicitarFirma: datos_disco => openModal(MODAL_SOLICITAR_FIRMA, datos_disco),\n    openFirmarDU: datos_disco => openModal(MODAL_FIRMAR_DU, datos_disco),\n    openCancelarFirma: datos_disco => openModal(MODAL_CANCELAR_FIRMA, datos_disco),\n    openEliminar: datos_disco => openModal(MODAL_ELIMINAR, datos_disco)\n  };\n  const accionesDT = { ...accionesDU,\n    openDesasignar: datos_disco => openModal(MODAL_DESASIGNAR, datos_disco),\n    openComunicar: datos_disco => openModal(MODAL_COMUNICAR, datos_disco),\n    openFirmar: datos_disco => openModal(MODAL_FIRMAR_DT, datos_disco),\n    openColocar: datos_disco => openModal(MODAL_COLOCAR, datos_disco),\n    openSustituir: datos_disco => openModal(MODAL_SUSTITUIR, datos_disco),\n    openExtraviado: datos_disco => openModal(MODAL_EXTRAVIADO, datos_disco)\n  };\n\n  const modales = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Asignar, { ...parametrosModal(MODAL_ASIGNAR)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 879,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Eliminar, { ...parametrosModal(MODAL_ELIMINAR)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 880,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SolicitarFirma, { ...parametrosModal(MODAL_SOLICITAR_FIRMA)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 881,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FirmarDU, { ...parametrosModal(MODAL_FIRMAR_DU)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 882,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CancelarFirma, { ...parametrosModal(MODAL_CANCELAR_FIRMA)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 883,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Desasignar, { ...parametrosModal(MODAL_DESASIGNAR)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 884,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Comunicar, { ...parametrosModal(MODAL_COMUNICAR)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 885,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Firmar, { ...parametrosModal(MODAL_FIRMAR_DT)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 886,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Sustituir, { ...parametrosModal(MODAL_SUSTITUIR)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 887,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Colocar, { ...parametrosModal(MODAL_COLOCAR)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 888,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Extraviado, { ...parametrosModal(MODAL_EXTRAVIADO)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 889,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 878,\n    columnNumber: 7\n  }, this);\n\n  const [buscarEnMiUidad, setBuscarEnMiUidad] = React.useState(true);\n  const [buscarPorIDsio, setBuscarPorIDsio] = React.useState(true);\n\n  const barraTodos = () => {\n    var params = {};\n    params.setRenderList = setRenderList;\n    params.setBuscarPor = setBuscarPor;\n    params.setValorBusqueda = setValorBusqueda;\n    params.setFechaDesde = setFechaDesde;\n    params.setFechaHasta = setFechaHasta;\n    params.setUnidadBusqueda = setUnidadBusqueda;\n    params.setBuscarEnMiUidad = setBuscarEnMiUidad;\n    params.setBuscarPorIDsio = setBuscarPorIDsio;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Hidden, {\n        only: \"xs\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(BarraSuperiorTodos, { ...params\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 909,\n          columnNumber: 36\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 909,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n        smUp: true,\n        children: [\" \", /*#__PURE__*/_jsxDEV(BarraSuperiorTodos, { ...params,\n          vistaMovil: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 910,\n          columnNumber: 31\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 910,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 908,\n      columnNumber: 13\n    }, this);\n  };\n\n  const calcularDiferenciaFechas = (fecha_1, fecha_2) => {\n    var seconds = Math.floor((fecha_2 - fecha_1) / 1000);\n    var minutes = Math.floor(seconds / 60);\n    var hours = Math.floor(minutes / 60);\n    var days = Math.floor(hours / 24);\n    hours = hours - days * 24;\n    minutes = minutes - days * 24 * 60 - hours * 60;\n    seconds = seconds - days * 24 * 60 * 60 - hours * 60 * 60 - minutes * 60;\n    var res = hours === 1 ? \" | hace una hora\" : hours > 1 ? \" | hace \" + hours + \" horas\" : minutes === 1 ? \" | hace 1 minuto\" : minutes > 1 ? \" | hace \" + minutes + \" minutos\" : \" | hace menos de un minuto\";\n    setDiferenciaFechas(res);\n  };\n\n  React.useEffect(() => {\n    const interval = setInterval(() => {\n      calcularDiferenciaFechas(ultimaActualizacion, new Date());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [ultimaActualizacion]);\n  const titulo = props.soloActivos ? \"Discos Activos\" : props.todos ? \"Todos los discos\" : \"\";\n  const subtitulo = props.soloActivos && state.unidadDesc;\n\n  const resumen = /*#__PURE__*/_jsxDEV(ResumenIncidencias, {\n    lista: incidencias,\n    setFiltro: setFiltro\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 951,\n    columnNumber: 21\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [(props.soloActivos || props.todos) && /*#__PURE__*/_jsxDEV(Titulo, {\n      titulo: titulo,\n      subtitulo: subtitulo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 957,\n      columnNumber: 56\n    }, this), props.soloActivos && !loading && /*#__PURE__*/_jsxDEV(BarraSuperiorActivos, {\n      setFiltro: setFiltro,\n      filtro: filtro,\n      vistaCelular: props.vistaCelular\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 958,\n      columnNumber: 51\n    }, this), props.todos && barraTodos(), loading ? /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"\",\n        src: \"/PAW/assets/images/loading.gif\",\n        width: \"60px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 964,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        color: \"initial\",\n        children: \"Obteniendo discos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 965,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 963,\n      columnNumber: 19\n    }, this) : errorAlCargar ? /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"text\",\n      border: \"0px\",\n      style: {\n        textTransform: 'none',\n        width: \"fit-content\"\n      },\n      color: \"default\",\n      onClick: () => setRenderList(true),\n      startIcon: /*#__PURE__*/_jsxDEV(RefreshOutlinedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 974,\n        columnNumber: 36\n      }, this),\n      children: \"Reintentar | No pudimos conectarnos con la base de discos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 968,\n      columnNumber: 21\n    }, this) : !lista || lista.length === 0 ? /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"text\",\n      border: \"0px\",\n      style: {\n        textTransform: 'none',\n        width: \"fit-content\"\n      },\n      color: \"default\",\n      onClick: () => setRenderList(true),\n      startIcon: /*#__PURE__*/_jsxDEV(RefreshOutlinedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 985,\n        columnNumber: 40\n      }, this),\n      children: \"Actualizar | No se obtuvieron datos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 979,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!infoFechas ? /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          border: \"0px\",\n          style: {\n            textTransform: 'none'\n          },\n          color: \"default\",\n          onClick: () => setRenderList(true),\n          startIcon: /*#__PURE__*/_jsxDEV(RefreshOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 997,\n            columnNumber: 52\n          }, this),\n          children: [\"Actualizar \", diferenciaFechas]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 995,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 994,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(BlackTooltip, {\n          title: \"Los discos con bordes punteados no fueron modificados en el periodo seleccionado.\",\n          placement: \"left\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"text\",\n            border: \"0px\",\n            style: {\n              textTransform: 'none',\n              textAlign: \"left\"\n            },\n            color: \"default\",\n            onClick: () => setRenderList(true),\n            startIcon: /*#__PURE__*/_jsxDEV(RefreshOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1007,\n              columnNumber: 56\n            }, this),\n            children: infoFechas\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1005,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1004,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1003,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        children: lista.map(inc => {\n          return /*#__PURE__*/_createElement(Incidencia, { ...inc,\n            ...props,\n            incidencia: inc.incidencia,\n            solicitudesGEMA: solicitudesGEMA,\n            key: inc.incidencia,\n            accionesDT: accionesDT,\n            accionesDU: accionesDU,\n            resaltadoFiltro: resaltadoFiltro,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1021,\n              columnNumber: 41\n            }\n          });\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1016,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 991,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(Fab, {\n      className: classes.fab,\n      color: \"primary\",\n      onClick: () => setRenderList(true),\n      style: {\n        backgroundColor: \"#0678f4\"\n      },\n      children: /*#__PURE__*/_jsxDEV(RefreshOutlinedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1044,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1043,\n      columnNumber: 13\n    }, this), modales]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 955,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListaDiscos, \"AWTdpk5h0ETy+doKn9P6SFcGHCA=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = ListaDiscos;\nexport default ListaDiscos;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListaDiscos\");","map":{"version":3,"sources":["C:/Users/d896422/Documents/hello/paw_code/src/components/listaDiscos/listaDiscos.js"],"names":["React","BarraSuperiorActivos","BarraSuperiorTodos","Incidencia","serviciosGEMA","AppContext","Box","Button","Hidden","Fab","Tooltip","RefreshOutlinedIcon","makeStyles","withStyles","Titulo","dateFormat","masks","ResumenIncidencias","Asignar","SolicitarFirma","FirmarDU","CancelarFirma","Desasignar","Eliminar","Comunicar","Firmar","Sustituir","Colocar","Extraviado","obtenerNombrePersonaLstDiscos","obtenerNombrePersona","Typography","useParams","useStyles","theme","fab","position","bottom","spacing","right","BlackTooltip","tooltip","color","backgroundColor","fontSize","ListaDiscos","props","classes","state","setState","useContext","renderList","setRenderList","useState","loading","setLoading","errorAlCargar","setErrorAlCargar","incidencias","setIncidencias","fechasIncidencias","setFechasIncidencias","solicitudesGEMA","setSolicitudesGEMA","asociarSolicitud","solicitudSIO","solicitudGEMA","solicitudes","buscarPor","setBuscarPor","valorBusqueda","setValorBusqueda","fechaDesde","setFechaDesde","fechaHasta","setFechaHasta","unidadBusqueda","setUnidadBusqueda","infoFechas","setInfoFechas","ultimaActualizacion","setUltimaActualizacion","Date","now","diferenciaFechas","setDiferenciaFechas","convertirEstado","estadoGEMA","formatearUbicacion","ubicacion","split","join","procesarMembers","members","tipo","ids","map","e","ticket","ticketid","solicitud","procesarDT","discos_trabajos","status","dt","fecha","statusdate","id","utd_nardisdiscoid","extraviado","unidad","numero","nrodisco","nombre","jefetrabajo","person","nombreCompleto","estado","historico","padre","push","procesarDU","incidencias_","inc","incidencia","sol","key","inc_","discosUnidad","discosNominados","descIncidencia","discoUnidad","firmaSolicitada","firmaPlanificada","encargadoFirma","latitud","longitud","encargadoFirmaCI","jefeDeTrabajos","jefeDeTrabajosCompleto","discosTrabajo","discosTrabajos","members_id","i","disco","includes","members_","length","discos_nominados_members","dn","listaIncidencias","ids_","indx","url","baseUrl","query_params","get","then","response","data","member","membersDT_","catch","error","alert","CONFIG","window","cargarDu","idDU","numeroDU","du","cargarDisco","cargarNominado","cargarDiscosPorNumero","buscarEnMiUidad","numeroDiscoResaltado","cargarPorSolicitud","idSol","buscarPorIDsio","formatDate","date","d","month","getMonth","day","getDate","year","getFullYear","validarEstado","statusDT","statusDN","statusDU","cargarPorFecha","desde","hasta","f_desde","parseInt","f_hasta","console","log","concat","cargarIncidencia","idInc","nominados","cargarListaDiscos","statusActivos","statusTodos","soloActivos","ids_du","sumarDias","dias","setDate","filtro","setFiltro","cantidad_filtros","resaltadoFiltro","toLocaleLowerCase","cantDiasHist","cantidadDiasHistDiscos","useEffect","historial","discounidad","nominado","idDU_UltimaAccion","parametros","fechaResaltadaDesde","fechaResaltadaHasta","todos","lista","filter","f_","f","toLowerCase","res_inc","res_dn","res_du","sort","a","b","NINGUN_MODAL","MODAL_ASIGNAR","MODAL_ELIMINAR","MODAL_SOLICITAR_FIRMA","MODAL_FIRMAR_DU","MODAL_CANCELAR_FIRMA","MODAL_DESASIGNAR","MODAL_FIRMAR_DT","MODAL_SUSTITUIR","MODAL_COLOCAR","MODAL_COMUNICAR","MODAL_EXTRAVIADO","setParametros","modalOpened","setModalOpened","openModal","modal","datos_disco","parametrosModal","close","open","accionesDU","openAsignar","openSolicitarFirma","openFirmarDU","openCancelarFirma","openEliminar","accionesDT","openDesasignar","openComunicar","openFirmar","openColocar","openSustituir","openExtraviado","modales","setBuscarEnMiUidad","setBuscarPorIDsio","barraTodos","params","calcularDiferenciaFechas","fecha_1","fecha_2","seconds","Math","floor","minutes","hours","days","res","interval","setInterval","clearInterval","titulo","subtitulo","unidadDesc","resumen","vistaCelular","textTransform","width","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport BarraSuperiorActivos from './barraSuperiorActivos';\r\nimport BarraSuperiorTodos from './barraSuperiorTodos';\r\nimport Incidencia from '../incidencia/incidencia';\r\nimport { serviciosGEMA } from '../../servicios/servicios';\r\nimport { AppContext } from '../../appProvider';\r\nimport { Box, Button, Hidden, Fab, Tooltip} from '@material-ui/core';\r\nimport RefreshOutlinedIcon from '@material-ui/icons/RefreshOutlined';\r\nimport { makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Titulo from '../layout/titulo';\r\n//import axios from 'axios';\r\nimport dateFormat, { masks } from \"dateformat\";\r\nimport ResumenIncidencias from './resumenIncidencias';\r\n\r\n//Acciones sobre DU\r\nimport Asignar from '../discoUnidad/acciones/asignar';\r\nimport SolicitarFirma from '../discoUnidad/acciones/solicitarFirma';\r\nimport FirmarDU from '../discoUnidad/acciones/firmarDU';\r\nimport CancelarFirma from '../discoUnidad/acciones/cancelarFirma';\r\nimport Desasignar from '../discoUnidad/acciones/desasignar';\r\nimport Eliminar from '../discoUnidad/acciones/eliminar';\r\n\r\n\r\n//Acciones sobre DT\r\nimport Comunicar from '../discoTrabajo/acciones/comunicar';\r\nimport Firmar from '../discoTrabajo/acciones/firmar';\r\nimport Sustituir from '../discoTrabajo/acciones/sustituir';\r\nimport Colocar from '../discoTrabajo/acciones/colocar';\r\nimport Extraviado from '../discoTrabajo/acciones/extraviado';\r\n\r\nimport {obtenerNombrePersonaLstDiscos as obtenerNombrePersona} from '../../utils/utils';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(3),\r\n        right: theme.spacing(4),\r\n      },\r\n}))\r\n\r\n\r\nconst BlackTooltip = withStyles({\r\n    tooltip: {\r\n      color: \"white\",\r\n      backgroundColor: \"black\",\r\n      fontSize: 16\r\n    }\r\n  })(Tooltip);\r\n\r\nconst ListaDiscos = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = React.useContext(AppContext);\r\n    const [renderList, setRenderList] = React.useState(true);\r\n    const [loading, setLoading] = React.useState(true);\r\n\r\n    //Error al cargar\r\n    const [errorAlCargar, setErrorAlCargar] = React.useState(false);\r\n\r\n    //Incidencias\r\n    const [incidencias, setIncidencias] = React.useState([]);\r\n    const [fechasIncidencias, setFechasIncidencias] = React.useState(null);\r\n\r\n    //solicitudes GEMA\r\n    const [solicitudesGEMA, setSolicitudesGEMA] = React.useState([]);\r\n    const asociarSolicitud = (solicitudSIO, solicitudGEMA) => {\r\n        let solicitudes = solicitudesGEMA;\r\n        solicitudes[solicitudSIO] = solicitudGEMA;\r\n        setSolicitudesGEMA(solicitudes);\r\n    }\r\n\r\n    //Busqueda\r\n    const [buscarPor, setBuscarPor] = React.useState(-1);\r\n    const [valorBusqueda, setValorBusqueda] = React.useState(null);\r\n    const [fechaDesde, setFechaDesde] = React.useState(null);\r\n    const [fechaHasta, setFechaHasta] = React.useState(null);\r\n    const [unidadBusqueda, setUnidadBusqueda] = React.useState(\"0\");\r\n    const [infoFechas, setInfoFechas] = React.useState(null);\r\n\r\n\r\n    //ultima actualización de datos\r\n    const [ultimaActualizacion, setUltimaActualizacion] = React.useState(Date.now());\r\n    const [diferenciaFechas, setDiferenciaFechas] = React.useState(\"\");\r\n\r\n    //Carga de datos\r\n\r\n    const convertirEstado = (estadoGEMA) => {\r\n        if (estadoGEMA === 'PLANIFICADO') return \"planificado\";\r\n        if (estadoGEMA === 'COMUNICADO') return \"comunicado\";\r\n        if (estadoGEMA === 'COLOCADO') return \"colocado\";\r\n        if (estadoGEMA === 'ENVIADO') return \"colocado\"; //para discos nominados\r\n        if (estadoGEMA === 'FIRMADO') return \"finalizado\";\r\n        if (estadoGEMA === 'DESASIGNADO') return \"desasignado\";\r\n        if (estadoGEMA === 'RETIRADO') return \"retirado\";\r\n        if (estadoGEMA === 'ELIMINADO') return \"eliminado\";\r\n        return \"\"\r\n    }\r\n\r\n\r\n    const formatearUbicacion = (ubicacion) => ubicacion.split(\"|\").join(\"❭\");\r\n   \r\n    const procesarMembers = (members, tipo, ids) => {\r\n\r\n        //Recorro todos los members para obtener la relacion entre las solicitudes de SIO y GEMA\r\n        members.map(e => {\r\n            if (e.ticket){\r\n                let solicitudGEMA = e.ticket && e.ticket[0] ? e.ticket[0].ticketid : null;\r\n                asociarSolicitud(e.solicitud,solicitudGEMA);\r\n            }\r\n        })\r\n\r\n        const procesarDT = (members) => {\r\n            var discos_trabajos = {}; //(key, value) = (id DU padre, DT)\r\n            members.map(e => {\r\n                if (e.tipo === \"DT\" && e.status !== \"DESASIGNADO\") {\r\n                    var dt = {};\r\n                    dt.fecha = e.statusdate;\r\n                    dt.id = e.utd_nardisdiscoid;\r\n                    dt.extraviado=e.extraviado;\r\n                    dt.unidad = e.unidad;\r\n                    dt.solicitud= e.solicitud ? e.solicitud : \"0\";\r\n                    dt.numero = (e.status !== \"PLANIFICADO\" && e.status !== \"COMUNICADO\") ? e.nrodisco : \"\";\r\n                    dt.nombre = obtenerNombrePersona(e.jefetrabajo, e.person, false);\r\n                    dt.nombreCompleto = obtenerNombrePersona(e.jefetrabajo, e.person, true);\r\n                    dt.estado = e.status ? convertirEstado(e.status) : \"\";\r\n                    dt.historico = [];\r\n                    if (!discos_trabajos[e.padre]) discos_trabajos[e.padre] = [];\r\n                    discos_trabajos[e.padre].push(dt);\r\n                }\r\n            })\r\n            return discos_trabajos;\r\n        }\r\n\r\n        const procesarDU = (members, discos_trabajos) => {\r\n            var incidencias_ = [];\r\n            members.map(e => {\r\n                if (e.tipo === \"DU\" && e.status !== \"ELIMINADO\" && e.status !== \"COLOCADO\") {\r\n                    var inc = e.incidencia;\r\n                    var sol = e.solicitud ? e.solicitud : \"0\";\r\n                    var key = inc; //+ \"-\" + sol;\r\n                    if (!incidencias_[key]) {\r\n                        var inc_ = {};\r\n                        inc_.discosUnidad = [];\r\n                        inc_.discosNominados = [];\r\n                        incidencias_[key] = inc_;\r\n                    }\r\n                    incidencias_[key].incidencia = inc;\r\n                    incidencias_[key].solicitud = sol;\r\n                    incidencias_[key].descIncidencia = '';\r\n                    var discoUnidad = {};\r\n                    discoUnidad.fecha = e.statusdate;\r\n                    discoUnidad.historico = [];\r\n                    discoUnidad.firmaSolicitada = e.status === 'FIRM_SOL';\r\n                    discoUnidad.firmaPlanificada = e.status === 'FIRMPLA';\r\n                    discoUnidad.encargadoFirma = '';\r\n                    discoUnidad.latitud = e.latitud;\r\n                    discoUnidad.longitud = e.longitud;\r\n                    discoUnidad.encargadoFirmaCI = e.jefetrabajo;\r\n                    if ((e.status === 'FIRM_SOL' || e.status === 'FIRMPLA') && e.person)\r\n                        discoUnidad.encargadoFirma = obtenerNombrePersona(e.jefetrabajo, e.person, false);\r\n\r\n                    discoUnidad.id = e.utd_nardisdiscoid;\r\n                    discoUnidad.extraviado= e.extraviado;\r\n                    discoUnidad.numero = e.nrodisco;\r\n                    discoUnidad.unidad = e.unidad;\r\n                    discoUnidad.ubicacion = formatearUbicacion(e.ubicacion);\r\n                    discoUnidad.solicitud =  e.solicitud ? e.solicitud : \"0\";\r\n\r\n                    //nombre del JT\r\n                    discoUnidad.jefeDeTrabajos = obtenerNombrePersona(e.jefetrabajo, e.person, false);\r\n                    discoUnidad.jefeDeTrabajosCompleto = obtenerNombrePersona(e.jefetrabajo, e.person, true);\r\n\r\n                    discoUnidad.estado = convertirEstado(e.status);\r\n\r\n                    //agrego los DT y le asigno a cada DT la unicacion de su DU padre\r\n                    var discosTrabajo = discos_trabajos[e.utd_nardisdiscoid];\r\n                    if (discosTrabajo)\r\n                        discosTrabajo = discosTrabajo.map(e => {\r\n                            e.ubicacion = formatearUbicacion(discoUnidad.ubicacion);\r\n                            return e\r\n                        });\r\n\r\n                    discoUnidad.discosTrabajos = discosTrabajo ? discosTrabajo : [];\r\n                    incidencias_[key].discosUnidad.push(discoUnidad);\r\n                }\r\n            });\r\n            return incidencias_;\r\n\r\n        }\r\n\r\n\r\n      \r\n        if (tipo === \"NUMEROS\") {\r\n            \r\n            //En member se obtienen todos los discos con el numero pasado por parametro\r\n            //Se agrega a members los discos faltantes para completar la visualizacion\r\n            //Si es un DT, se carga su DU padre y sus hermanos\r\n            //Si es es un DN no se carga nada mas\r\n            //Si es un DU, se carga todos los DT hijos\r\n\r\n            //1) se obtienen todos los id de los DU a mostrar y secargan en members_\r\n            var members_id = [];\r\n\r\n            for (let i in members) {\r\n                var disco = members[i];\r\n                if ((disco.tipo === \"DT\") && (!members_id.includes(disco.padre)))\r\n                    members_id.push(disco.padre);\r\n                if ((disco.tipo === \"DU\") && (!members_id.includes(disco.utd_nardisdiscoid)))\r\n                    members_id.push(disco.utd_nardisdiscoid);\r\n            }\r\n         \r\n            var members_ = [];\r\n            if (members_id.length === 0) { //entra aca cuando en members solo hay DN\r\n\r\n                var incidencias_ = [];\r\n\r\n                //obtengo todos los DN de members\r\n                //a priori son todos\r\n                var discos_nominados_members = [];\r\n                for (let i in members) {\r\n                    if (members[i].tipo === \"DN\")\r\n                        discos_nominados_members.push(members[i]);\r\n                }\r\n\r\n                //agrego los DN a las incidencias_\r\n                for (let i in discos_nominados_members) {\r\n                    var dn = {};\r\n                    var e = discos_nominados_members[i];\r\n                    dn.fecha = e.statusdate;\r\n                    dn.id = e.utd_nardisdiscoid;\r\n                    dn.ubicacion = formatearUbicacion(e.ubicacion);\r\n                    dn.extraviado=e.extraviado;\r\n                    dn.unidad = e.unidad;\r\n                    dn.latitud = e.latitud;\r\n                    dn.longitud = e.longitud;\r\n                    dn.numero = e.nrodisco;\r\n                    dn.nombre = obtenerNombrePersona(e.jefetrabajo, e.person, false);\r\n                    dn.nombreCompleto = obtenerNombrePersona(e.jefetrabajo, e.person, true);\r\n                    dn.estado = e.status ? convertirEstado(e.status) : \"\";\r\n                    dn.solicitud= e.solicitud ? e.solicitud : \"0\";\r\n                    dn.historico = [];\r\n                    var inc = e.incidencia;\r\n                    var sol = e.solicitud ? e.solicitud : \"0\";\r\n                    var key = inc; //+ \"-\" + sol;\r\n                    if (!incidencias_[key])\r\n                        incidencias_[key] = { discosUnidad: [], incidencia: inc, solicitud: sol, descIncidencia: \"\" };\r\n\r\n                    if (!incidencias_[key].discosNominados) incidencias_[key].discosNominados = [];\r\n                    incidencias_[key].discosNominados.push(dn);\r\n                }\r\n\r\n                \r\n\r\n                var listaIncidencias = [];\r\n                var ids_ = {}; //diccionario (id DU, indice en listaIncidencias del DU)\r\n                var indx = 0;\r\n                //por que for y no map y por que es var y no let o const //ER\r\n                for (var e in incidencias_) {\r\n                    listaIncidencias.push(incidencias_[e]);\r\n                    ids_[incidencias_[e].id] = indx;\r\n                    indx = indx + 1;\r\n                }\r\n\r\n                setIncidencias(listaIncidencias);\r\n                setLoading(false);\r\n                return\r\n\r\n            }\r\n            else {\r\n                \r\n                var url = baseUrl(query_params) + \"utd_nardisdiscoid in [\" + members_id + \"]\";\r\n                serviciosGEMA.get(url)\r\n                    .then(response => {\r\n                        members_ = response.data.member;\r\n                       //2) se obtienen todos los DT que tienen como padre alguno \r\n                        //de los DU en members_ y se agregan a members\r\n                        url = baseUrl(query_params) + \"padre in [\" + members_id + \"]\";\r\n                        serviciosGEMA.get(url)\r\n                            .then(response => {\r\n                                var membersDT_ = response.data.member;\r\n                                members_ = [...members_, ...membersDT_];\r\n\r\n                                //Discos de Trabajo\r\n                                var discos_trabajos = procesarDT(members_);\r\n\r\n                                //Discos a Unidad\r\n                                var incidencias_ = procesarDU(members_, discos_trabajos);\r\n\r\n                                //3) por ultimo se agregan a members_ los DN de members\r\n                                var discos_nominados_members = [];\r\n\r\n                                for (let i in members) {\r\n                                    if (members[i].tipo === \"DN\")\r\n                                        discos_nominados_members.push(members[i]);\r\n                                }\r\n\r\n                                //agrego los DN a las incidencias_\r\n                                for (let i in discos_nominados_members) {\r\n                                    var dn = {};\r\n                                    var e = discos_nominados_members[i];\r\n                                    dn.fecha = e.statusdate;\r\n                                    dn.id = e.utd_nardisdiscoid;\r\n                                    dn.ubicacion = formatearUbicacion(e.ubicacion);\r\n                                    dn.unidad = e.unidad;\r\n                                    dn.extraviado=e.extraviado;\r\n                                    dn.latitud = e.latitud;\r\n                                    dn.longitud = e.longitud;\r\n                                    dn.numero = e.nrodisco;\r\n                                    dn.nombre = obtenerNombrePersona(e.jefetrabajo, e.person, false);\r\n                                    dn.nombreCompleto = obtenerNombrePersona(e.jefetrabajo, e.person, true);\r\n                                    dn.estado = e.status ? convertirEstado(e.status) : \"\";\r\n                                    dn.solicitud= e.solicitud ? e.solicitud : \"0\";\r\n                                    dn.historico = [];\r\n                                    var inc = e.incidencia;\r\n                                    var sol = e.solicitud ? e.solicitud : \"0\";\r\n                                    var key = inc; //+ \"-\" + sol;\r\n                                    if (!incidencias_[key])\r\n                                        incidencias_[key] = { discosUnidad: [], incidencia: inc, solicitud: sol, descIncidencia: \"\" };\r\n\r\n                                    if (!incidencias_[key].discosNominados) incidencias_[key].discosNominados = [];\r\n                                    incidencias_[key].discosNominados.push(dn);\r\n                                }\r\n\r\n\r\n\r\n                                var listaIncidencias = [];\r\n                                var ids_ = {}; //diccionario (id DU, indice en listaIncidencias del DU)\r\n                                var indx = 0;\r\n                                for (var e in incidencias_) {\r\n                                    listaIncidencias.push(incidencias_[e]);\r\n                                    ids_[incidencias_[e].id] = indx;\r\n                                    indx = indx + 1;\r\n                                }\r\n\r\n                                setIncidencias(listaIncidencias);\r\n                                setLoading(false);\r\n                                return\r\n                            }\r\n                            )\r\n                            .catch(error => {\r\n                                setIncidencias([]);\r\n                                setLoading(false);\r\n                                setErrorAlCargar(true);\r\n                                alert(\"Error al procesar members. (2): \" + error)\r\n                            })\r\n\r\n                    })\r\n                    .catch(error => {\r\n                        setIncidencias([]);\r\n                        \r\n                        setErrorAlCargar(true);\r\n                        setLoading(false);\r\n                        alert(\"Error al procesar members. (1): \" + error)\r\n                    })\r\n            }\r\n\r\n        }\r\n        else if (tipo === \"DISCOUNIDAD\") {\r\n            //Discos de Trabajo\r\n            var discos_trabajos = procesarDT(members);\r\n\r\n            //Discos a Unidad\r\n            var incidencias_ = procesarDU(members, discos_trabajos);\r\n\r\n            var listaIncidencias = [];\r\n            var ids_ = {}; //diccionario (id DU, indice en listaIncidencias del DU)\r\n            var indx = 0;\r\n            for (var e in incidencias_) {\r\n                listaIncidencias.push(incidencias_[e]);\r\n                ids_[incidencias_[e].id] = indx;\r\n                indx = indx + 1;\r\n            }\r\n\r\n            setIncidencias(listaIncidencias);\r\n            setLoading(false);\r\n            return\r\n\r\n        }\r\n        else {\r\n            var url = \"\";\r\n            if (tipo === \"TODOS\") var url = \"unidad=\" + state.unidad + \" and tipo=\\\"DN\\\"\"\r\n            else if (tipo === \"ACTIVOS\") url = \"unidad=\" + state.unidad + \" and status=\\\"ENVIADO\\\" and tipo=\\\"DN\\\"\"\r\n            else if (tipo === \"INCIDENCIA\") url = \"incidencia=\\\"\" + ids + \"\\\" and tipo=\\\"DN\\\"\"\r\n            else if (tipo === \"NOMINADOS\") url = \"incidencia=\\\"\" + ids + \"\\\" and tipo=\\\"DN\\\"\"\r\n            else if (tipo === \"NOMINADO\") url = \"utd_nardisdiscoid=\" + ids + \" and tipo=\\\"DN\\\"\"\r\n            else if (tipo === \"SOLICITUD\" ) url = \"solicitud=\\\"\" + ids + \"\\\" and tipo=\\\"DN\\\"\"\r\n            //else if (tipo === \"FECHA\") url = \"statusdate>=\\\"\"+ ids.f_desde + \"\\\" and statusdate<=\\\"\"+ ids.f_hasta + \"\\\" and unidad=\" + ids.unidadBusqueda +\" and tipo=\\\"DN\\\"\";\r\n            else if (tipo === \"FECHA\") url = \"incidencia in [\" + ids + \"] and tipo=\\\"DN\\\"\"\r\n\r\n            url = baseUrl(query_params) + url;\r\n\r\n            if (tipo !== \"ACTIVOS\") url += \" and status in [\\\"ENVIADO\\\",\\\"FIRMADO\\\",\\\"RETIRADO\\\"]\";\r\n\r\n            serviciosGEMA.get(url)\r\n                .then(response => {\r\n                    var listaIncidencias = [];\r\n                    if (members.length !== 0) {\r\n                        //Discos de Trabajo\r\n                        var discos_trabajos = procesarDT(members);\r\n                        //Discos a Unidad\r\n                        var incidencias_ = procesarDU(members, discos_trabajos);\r\n                    } else {\r\n                        //Discos a Unidad\r\n                        var incidencias_ = [];\r\n                    }\r\n\r\n\r\n                    var discos_nominados_members = response.data.member;\r\n                    //agrego los DN a las incidencias_\r\n                    for (let i in discos_nominados_members) {\r\n                        var dn = {};\r\n                        var e = discos_nominados_members[i];\r\n                        dn.id = e.utd_nardisdiscoid;\r\n                        dn.ubicacion = formatearUbicacion(e.ubicacion);\r\n                        dn.unidad = e.unidad;\r\n                        dn.extraviado=e.extraviado;\r\n                        dn.latitud = e.latitud;\r\n                        dn.fecha = e.statusdate;\r\n                        dn.longitud = e.longitud;\r\n                        dn.numero = e.nrodisco;\r\n                        dn.nombre = obtenerNombrePersona(e.jefetrabajo, e.person, false);\r\n                        dn.nombreCompleto = obtenerNombrePersona(e.jefetrabajo, e.person, true);\r\n                        dn.estado = e.status ? convertirEstado(e.status) : \"\";\r\n                        dn.solicitud= e.solicitud ? e.solicitud : \"0\";\r\n                        dn.historico = [];\r\n                        var inc = e.incidencia;\r\n                        var sol = e.solicitud ? e.solicitud : \"0\";\r\n                        var key = inc; //+ \"-\" + sol;\r\n                        if (!incidencias_[key])\r\n                            incidencias_[key] = { discosUnidad: [], incidencia: inc, solicitud: sol, descIncidencia: \"\" };\r\n\r\n                        if (!incidencias_[key].discosNominados) incidencias_[key].discosNominados = [];\r\n                        incidencias_[key].discosNominados.push(dn);\r\n                    }\r\n\r\n                    var ids_ = {}; //diccionario (id DU, indice en listaIncidencias del DU)\r\n                    var indx = 0;\r\n                    for (var e in incidencias_) {\r\n                        listaIncidencias.push(incidencias_[e]);\r\n                        ids_[incidencias_[e].id] = indx;\r\n                        indx = indx + 1;\r\n                    }\r\n\r\n                    setIncidencias(listaIncidencias);\r\n                    setLoading(false);\r\n                })\r\n                .catch(error => {\r\n                    setIncidencias([]);     \r\n                    setErrorAlCargar(true);\r\n                    setLoading(false);\r\n                    alert(\"Error al procesar members..: \" + error)\r\n                })\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    const { id } = useParams();\r\n\r\n    const CONFIG = window.data;\r\n\r\n    var query_params = \"status,ticket, status_description, tipo, changeby, incidencia, jefetrabajo, nrodisco, padre, unidad, solicitud, utd_nardisdiscoid, person, ubicacion, extraviado, latitud, longitud, statusdate  \";\r\n    const baseUrl = (query_params) => \"/utd_nardisdisco?lean=1&oslc.select=\" + query_params + \"&_dropnulls=0&oslc.where=\";\r\n\r\n    const cargarDu = (idDU, numeroDU) => {\r\n        var url = (idDU)\r\n            ? baseUrl(query_params) + \"UTD_NARDISDISCOID=\" + idDU\r\n            : baseUrl(query_params) + \"nrodisco=\\\"\" + numeroDU + \"\\\"\";\r\n        serviciosGEMA.get(url)\r\n            .then(response => {\r\n                var du = response.data.member;\r\n                url = baseUrl(query_params) + \"padre=\" + du[0].utd_nardisdiscoid;\r\n                serviciosGEMA.get(url)\r\n                    .then(response => {\r\n                        var members = response.data.member;\r\n                        members.push(du[0]);\r\n                        procesarMembers(members, \"DISCOUNIDAD\", null)\r\n                    })\r\n                    .catch(error => alert(\"Error al cargar DT asociados al DU: \" + error))\r\n            })\r\n            .catch(error => alert(\"Error al cargar el DU: \" + error))\r\n    }\r\n\r\n    const cargarDisco = (id, numero) => {\r\n        var url = (id)\r\n            ? baseUrl(query_params) + \"UTD_NARDISDISCOID=\" + id\r\n            : baseUrl(query_params) + \"nrodisco=\\\"\" + numero + \"\\\"\";\r\n\r\n        if (!numero || numero === \"\") procesarMembers([], \"DISCO\", null); //solucion a problema a discos que quedaron sin numero\r\n        else {\r\n            serviciosGEMA.get(url)\r\n                .then(response => {\r\n                    var member = response.data.member;\r\n                    if (member && member.length > 0) {\r\n                        if (member[0].tipo === \"DT\") cargarDu(member[0].padre, false)\r\n                        else if (member[0].tipo === \"DN\") cargarNominado(member[0].utd_nardisdiscoid);\r\n                        else cargarDu(id, numero);\r\n                    } else procesarMembers([], \"DISCO\", null)\r\n                })\r\n                .catch(error => {\r\n                    setIncidencias([]);\r\n                    \r\n                    setErrorAlCargar(true);\r\n                    setLoading(false);\r\n                    alert(\"Error al cargar el Disco..: \" + error)\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    const cargarDiscosPorNumero = (numero, buscarEnMiUidad) => {\r\n\r\n        setState((state)=> { return { ...state, numeroDiscoResaltado: numero }});\r\n        var url = baseUrl(query_params) + \"nrodisco=\\\"\" + numero + \"\\\"\";\r\n        if (buscarEnMiUidad)\r\n            url = url + \" and unidad=\" + state.unidad;\r\n\r\n        serviciosGEMA.get(url)\r\n            .then(response => {\r\n                var member = response.data.member;\r\n                    //en member se cargan todos los discos con el numero pasado por parametro\r\n                    procesarMembers(member, \"NUMEROS\", null)\r\n            })\r\n            .catch(error => {\r\n                setIncidencias([]);\r\n                setErrorAlCargar(true);\r\n                setLoading(false);\r\n                alert(\"Error al cargar los discos con numero \" + numero + \": \" + error)\r\n            })\r\n    }\r\n\r\n    const cargarNominado = (id) => {\r\n        procesarMembers([], \"NOMINADO\", id)\r\n    }\r\n\r\n    const cargarPorSolicitud = (idSol) => {\r\n\r\n\r\n        var url = buscarPorIDsio \r\n            ? baseUrl(query_params) + \"solicitud=\" + idSol\r\n            : baseUrl(query_params) + 'UTD_SOLGEMA.ticketid=' + idSol;\r\n\r\n        serviciosGEMA.get(url)\r\n            .then(response => {\r\n                const id = buscarPorIDsio ? idSol : response.data.member[0].solicitud;\r\n                procesarMembers(response.data.member, \"SOLICITUD\", id)\r\n            })\r\n            .catch(error => {\r\n                setIncidencias([]);\r\n                \r\n                setErrorAlCargar(true);\r\n                setLoading(false);\r\n                alert(\"Error al cargar discos de una solicitud: \" + error)\r\n            })\r\n    }\r\n\r\n    function formatDate(date) {\r\n        var d = new Date(date),\r\n            month = '' + (d.getMonth() + 1),\r\n            day = '' + d.getDate(),\r\n            year = d.getFullYear();\r\n\r\n        if (month.length < 2)\r\n            month = '0' + month;\r\n        if (day.length < 2)\r\n            day = '0' + day;\r\n\r\n        return [year, month, day].join('-');\r\n    }\r\n\r\n\r\n\r\n    const validarEstado = (tipo,estado) => {\r\n            \r\n        let statusDT = [\"COMUNICADO\",\"PLANIFICADO\",\"COLOCADO\",\"FIRMADO\"];\r\n        let statusDN = [\"ENVIADO\",\"FIRMADO\",\"RETIRADO\"];\r\n        let statusDU = [\"ENVIADO\",\"FIRM_SOL\",\"FIRMPLA\",\"FIRMADO\",\"RETIRADO\"];\r\n\r\n        return  (tipo===\"DT\" && statusDT.includes(estado)) ||\r\n                (tipo===\"DN\" && statusDN.includes(estado)) ||\r\n                (tipo===\"DU\" && statusDU.includes(estado)) \r\n    }\r\n    \r\n\r\n    const cargarPorFecha = (desde, hasta, unidadBusqueda) => {\r\n        \r\n        setIncidencias([]);\r\n        setFechasIncidencias({});\r\n\r\n        const f_desde =  dateFormat(new Date(parseInt(desde)),\"isoUtcDateTime\");\r\n        const f_hasta =  dateFormat(new Date(parseInt(hasta)),\"isoUtcDateTime\");\r\n\r\n        let url = baseUrl(query_params) + \"statusdate>=\\\"\"+ f_desde + \"\\\" and statusdate<=\\\"\"+ f_hasta + \"\\\" and unidad=\" + unidadBusqueda; // + \" and status in \" + status;\r\n        setFechasIncidencias({});\r\n        serviciosGEMA.get(url)\r\n            .then(response => {\r\n                let incidencias  = [];\r\n                console.log(response.data.member);\r\n                response.data.member.map(e=> {\r\n                    if (!incidencias.includes(e.incidencia) && validarEstado(e.tipo,e.status))\r\n                        incidencias = incidencias.concat(e.incidencia); \r\n                })\r\n                \r\n                let url = baseUrl(query_params) + \"incidencia in [\" + incidencias + \"] and unidad=\" + unidadBusqueda;\r\n               \r\n                serviciosGEMA.get(url)\r\n                    .then(response => procesarMembers(response.data.member, \"FECHA\", incidencias))\r\n                    .catch(error => {\r\n                        setIncidencias([]);\r\n                        setErrorAlCargar(true);\r\n                        setLoading(false);\r\n                        alert(\"Error al cargar discos de una incidencia, intenta nuevamente: \" + error)\r\n                    })\r\n\r\n        })\r\n        .catch(error => {\r\n            setIncidencias([]);\r\n            setErrorAlCargar(true);\r\n            setLoading(false);\r\n            alert(\"Error al cargar discos de una incidencia, intenta nuevamente: \" + error)\r\n        })\r\n    }\r\n  \r\n    const cargarIncidencia = (idInc) => {\r\n\r\n        if (props.nominados) procesarMembers([], \"NOMINADOS\", idInc)\r\n        else {\r\n            var url = baseUrl(query_params) + \"incidencia=\" + idInc;\r\n            serviciosGEMA.get(url)\r\n                .then(response => procesarMembers(response.data.member, \"INCIDENCIA\", idInc))\r\n                .catch(error => {\r\n                    setIncidencias([]);\r\n                    setErrorAlCargar(true);\r\n                    setLoading(false);\r\n                    alert(\"Error al cargar discos de una incidencia: \" + error)\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    const cargarListaDiscos = () => {\r\n        //Cargo los DU y los guardo en members\r\n        var members = null;\r\n        var statusActivos = \"[\\\"ENVIADO\\\",\\\"FIRM_SOL\\\",\\\"FIRMPLA\\\"]\";\r\n        var statusTodos = \"[\\\"ENVIADO\\\",\\\"FIRM_SOL\\\",\\\"FIRMPLA\\\",\\\"FIRMADO\\\",\\\"RETIRADO\\\"]\";\r\n        var status = props.soloActivos ? statusActivos : statusTodos;\r\n        var url = baseUrl(query_params) + \"unidad=\" + state.unidad + \" and tipo=\\\"DU\\\" and status in \" + status + \"&collectioncount=1\";\r\n\r\n        serviciosGEMA.get(url)\r\n            .then(response => {\r\n                members = response.data.member;\r\n                console.log(members);\r\n                if (members.length !== 0) {\r\n                    //obtengo los id de los DU y cargo los DT\r\n                    var ids_du = members.map(e => e.utd_nardisdiscoid);\r\n                    url = baseUrl(query_params) + \"padre in [\" + ids_du + \"]&collectioncount=1\";\r\n                    serviciosGEMA.get(url)\r\n                        .then(response => {\r\n                            members = members.concat(response.data.member);\r\n                            console.log(members);\r\n                            procesarMembers(members, props.soloActivos ? \"ACTIVOS\" : \"TODOS\", null);\r\n                        })\r\n                        .catch(error => {\r\n                            alert(\"Error al cargar los discos de trabajo: \" + error)\r\n                            setErrorAlCargar(true);\r\n                            setLoading(false);\r\n                        })\r\n                } else procesarMembers([], props.soloActivos ? \"ACTIVOS\" : \"TODOS\", null);\r\n            })\r\n            .catch(error => {\r\n                alert(\"Error al cargar discos activos: \" + error)\r\n                setErrorAlCargar(true);\r\n                setLoading(false);\r\n            })\r\n    }\r\n\r\n   \r\n    const sumarDias = (fecha, dias) => fecha.setDate(fecha.getDate() + dias);\r\n\r\n\r\n    //Filtrado de incidencias\r\n    const [filtro, setFiltro] = React.useState('');\r\n    const cantidad_filtros =  filtro===\"\" ? 0 : filtro.split(\",\").length;\r\n    const resaltadoFiltro = cantidad_filtros === 1 ? filtro.toLocaleLowerCase() : \"\";\r\n\r\n    const cantDiasHist = CONFIG.cantidadDiasHistDiscos;\r\n\r\n    //RENDER\r\n    React.useEffect(() => {\r\n       \r\n        if (renderList) {\r\n            setDiferenciaFechas(\"\");\r\n            setFechasIncidencias(null);\r\n\r\n            let historial =  \r\n                !(buscarPor === 0 ||  buscarPor === 1 || buscarPor === 2 || buscarPor === 3 || \r\n                props.discounidad || props.incidencia || props.nominado || props.soloActivos);\r\n\r\n            const f_desde = (buscarPor === 3)  \r\n                ? sumarDias(new Date(fechaDesde), 0)\r\n                : historial \r\n                    ? sumarDias(new Date(), -(cantDiasHist-1))\r\n                    : null;\r\n\r\n            const f_hasta = (buscarPor === 3)\r\n                ? sumarDias(new Date(fechaHasta), 1)\r\n                : historial\r\n                    ? sumarDias(new Date(), 1)\r\n                    : null;\r\n\r\n\r\n\r\n            setState((state) => {\r\n                return {  ...state, \r\n                            idDU_UltimaAccion: parametros ? parametros.idDU : null,\r\n                            numeroDiscoResaltado: \"\",\r\n                            fechaResaltadaDesde: f_desde, \r\n                            fechaResaltadaHasta: f_hasta\r\n                        }\r\n                }\r\n            );\r\n\r\n            \r\n\r\n            setInfoFechas(null);\r\n            setLoading(true);\r\n            setErrorAlCargar(false);\r\n            if (buscarPor === 0) cargarIncidencia(valorBusqueda)\r\n            else if (buscarPor === 1) cargarPorSolicitud(valorBusqueda)\r\n            else if (buscarPor === 2) cargarDiscosPorNumero(valorBusqueda, buscarEnMiUidad);\r\n            else if (buscarPor === 3) cargarPorFecha(f_desde, f_hasta, unidadBusqueda)\r\n            else if (props.discounidad) cargarDu(id, false)\r\n            else if (props.incidencia) cargarIncidencia(id)\r\n            else if (props.nominado) cargarNominado(id)\r\n            else if (props.soloActivos) cargarListaDiscos()\r\n            else if (props.todos) {\r\n                cargarPorFecha(f_desde, f_hasta, state.unidad);\r\n                setInfoFechas(\"Incidencias con discos modificados en los últimos \"+ cantDiasHist + \" dias\");\r\n            }\r\n            setUltimaActualizacion(Date.now())\r\n            setRenderList(false);\r\n        }\r\n    }, [renderList])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    var lista = incidencias;\r\n    if (filtro!==\"\") {\r\n        lista = incidencias.filter(inc => \r\n            filtro.split(\",\")\r\n                .map( f_ => {\r\n                    let f = f_.toLowerCase();\r\n                    //ID incidencia\r\n                    let res_inc = \r\n                        f!==\"\" && \r\n                        inc.incidencia.toLowerCase().includes(f);\r\n                    \r\n                    //Nro | nombre | ubicacion DN\r\n                    let res_dn = \r\n                        inc.discosNominados.map(dn => \r\n                            f!==\"\" && \r\n                            (\r\n                                dn.numero.toLowerCase().includes(f) ||\r\n                                dn.nombre.toLowerCase().includes(f) ||\r\n                                dn.ubicacion.toLowerCase().includes(f) \r\n                            )\r\n                        ).includes(true);\r\n                    \r\n                    //Nro | ubicacion DU\r\n                    let res_du = \r\n                        inc.discosUnidad.map(du => \r\n                                f!==\"\" &&  \r\n                                (\r\n                                    du.numero.toLowerCase().includes(f) ||\r\n                                    du.ubicacion.toLowerCase().includes(f) ||\r\n                                    \r\n                                    //Nro | nombre DT\r\n                                    du.discosTrabajos.map(dt =>\r\n                                        dt.numero.toLowerCase().includes(f) ||\r\n                                        dt.nombre.toLowerCase().includes(f)\r\n                                    ).includes(true)\r\n                                   \r\n                                )\r\n                        ).includes(true);\r\n                    \r\n                    return (res_inc || res_dn || res_du)\r\n                })\r\n                .includes(true)   \r\n            )\r\n    }\r\n       \r\n        \r\n\r\n    //Si fechasIncidencias (bsuqueda por fecha) \r\n    //agrego el parametro fecha a las incidencias y las ordeno por fecha\r\n    lista = lista.map(inc =>\r\n        fechasIncidencias\r\n            ? { ...inc, fecha: fechasIncidencias[inc.incidencia] }\r\n            : inc)\r\n\r\n    lista = lista.sort((a, b) => {\r\n        if (a.incidencia > b.incidencia) return -1;\r\n        if (a.incidencia < b.incidencia) return 1;\r\n        if (a.solicitud > b.solicitud) return 1;\r\n        return -1;\r\n    });\r\n\r\n    //PARAMETROS / MODALES\r\n\r\n    const NINGUN_MODAL = 0;\r\n    const MODAL_ASIGNAR = 1;\r\n    const MODAL_ELIMINAR = 2;\r\n    const MODAL_SOLICITAR_FIRMA = 3;\r\n    const MODAL_FIRMAR_DU = 4;\r\n    const MODAL_CANCELAR_FIRMA = 5;\r\n    const MODAL_DESASIGNAR = 6;\r\n    const MODAL_FIRMAR_DT = 7;\r\n    const MODAL_SUSTITUIR = 8;\r\n    const MODAL_COLOCAR = 9;\r\n    const MODAL_COMUNICAR = 10;\r\n    const MODAL_EXTRAVIADO = 11;\r\n\r\n    const [parametros, setParametros] = React.useState(null);\r\n    const [modalOpened, setModalOpened] = React.useState(NINGUN_MODAL);\r\n\r\n  \r\n\r\n   \r\n    const openModal = (modal, datos_disco) =>{\r\n        setParametros(datos_disco);\r\n        setModalOpened(modal);\r\n    }\r\n\r\n    const parametrosModal = (modal) => {\r\n         return {\r\n            ...parametros,\r\n            close : () => setModalOpened(NINGUN_MODAL),\r\n            open: modalOpened===modal,\r\n            setRenderList: setRenderList\r\n        }\r\n    }\r\n\r\n    \r\n    const accionesDU = {\r\n        openAsignar:        (datos_disco) => openModal(MODAL_ASIGNAR,datos_disco),\r\n        openSolicitarFirma: (datos_disco) => openModal(MODAL_SOLICITAR_FIRMA,datos_disco),\r\n        openFirmarDU:       (datos_disco) => openModal(MODAL_FIRMAR_DU,datos_disco),\r\n        openCancelarFirma:  (datos_disco) => openModal(MODAL_CANCELAR_FIRMA,datos_disco),\r\n        openEliminar:       (datos_disco) => openModal(MODAL_ELIMINAR,datos_disco)\r\n    }\r\n\r\n    const accionesDT = {\r\n        ...accionesDU,\r\n        openDesasignar:     (datos_disco) => openModal(MODAL_DESASIGNAR,datos_disco),\r\n        openComunicar:      (datos_disco) => openModal(MODAL_COMUNICAR,datos_disco),\r\n        openFirmar:         (datos_disco) => openModal(MODAL_FIRMAR_DT,datos_disco),\r\n        openColocar:        (datos_disco) => openModal(MODAL_COLOCAR,datos_disco),\r\n        openSustituir:      (datos_disco) => openModal(MODAL_SUSTITUIR,datos_disco),\r\n        openExtraviado:     (datos_disco) => openModal(MODAL_EXTRAVIADO,datos_disco)\r\n    }\r\n\r\n\r\n  const modales = (\r\n      <React.Fragment>\r\n        <Asignar {...parametrosModal(MODAL_ASIGNAR)} />\r\n        <Eliminar {...parametrosModal(MODAL_ELIMINAR)} />\r\n        <SolicitarFirma {...parametrosModal(MODAL_SOLICITAR_FIRMA)} />\r\n        <FirmarDU {...parametrosModal(MODAL_FIRMAR_DU)} />\r\n        <CancelarFirma {...parametrosModal(MODAL_CANCELAR_FIRMA)} />\r\n        <Desasignar {...parametrosModal(MODAL_DESASIGNAR)} />\r\n        <Comunicar {...parametrosModal(MODAL_COMUNICAR)} />\r\n        <Firmar {...parametrosModal(MODAL_FIRMAR_DT)} />\r\n        <Sustituir {...parametrosModal(MODAL_SUSTITUIR)} />\r\n        <Colocar {...parametrosModal(MODAL_COLOCAR)} />\r\n        <Extraviado {...parametrosModal(MODAL_EXTRAVIADO)} />\r\n      </React.Fragment>\r\n  )\r\n\r\n    const [buscarEnMiUidad, setBuscarEnMiUidad] = React.useState(true);\r\n    const [buscarPorIDsio,setBuscarPorIDsio] = React.useState(true);\r\n\r\n    const barraTodos = () => {\r\n        var params = {};\r\n        params.setRenderList = setRenderList;\r\n        params.setBuscarPor = setBuscarPor;\r\n        params.setValorBusqueda = setValorBusqueda;\r\n        params.setFechaDesde = setFechaDesde;\r\n        params.setFechaHasta = setFechaHasta;\r\n        params.setUnidadBusqueda = setUnidadBusqueda;\r\n        params.setBuscarEnMiUidad = setBuscarEnMiUidad;\r\n        params.setBuscarPorIDsio = setBuscarPorIDsio;\r\n        \r\n        return (\r\n            <div>\r\n                <Hidden only=\"xs\"> <BarraSuperiorTodos  {...params} /> </Hidden>\r\n                <Hidden smUp> <BarraSuperiorTodos {...params} vistaMovil/> </Hidden>\r\n            </div> \r\n        )}\r\n\r\n\r\n    const calcularDiferenciaFechas = (fecha_1, fecha_2) => {\r\n        var seconds = Math.floor((fecha_2 - (fecha_1)) / 1000);\r\n        var minutes = Math.floor(seconds / 60);\r\n        var hours = Math.floor(minutes / 60);\r\n        var days = Math.floor(hours / 24);\r\n\r\n        hours = hours - (days * 24);\r\n        minutes = minutes - (days * 24 * 60) - (hours * 60);\r\n        seconds = seconds - (days * 24 * 60 * 60) - (hours * 60 * 60) - (minutes * 60);\r\n        var res = hours === 1\r\n            ? \" | hace una hora\"\r\n            : hours > 1\r\n                ? \" | hace \" + hours + \" horas\"\r\n                : minutes === 1\r\n                    ? \" | hace 1 minuto\"\r\n                    : minutes > 1\r\n                        ? \" | hace \" + minutes + \" minutos\"\r\n                        : \" | hace menos de un minuto\";\r\n        setDiferenciaFechas(res);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        const interval = setInterval(() => { calcularDiferenciaFechas(ultimaActualizacion, new Date); }, 1000)\r\n        return () => clearInterval(interval);\r\n    }, [ultimaActualizacion]);\r\n\r\n\r\n\r\n    const titulo = props.soloActivos\r\n        ?  \"Discos Activos\"\r\n        : props.todos \r\n            ? \"Todos los discos\"\r\n            : \"\";\r\n\r\n    const subtitulo = props.soloActivos && state.unidadDesc;\r\n\r\n    const resumen = <ResumenIncidencias lista={incidencias} setFiltro={setFiltro}/>;\r\n\r\n    return (\r\n\r\n        <div>\r\n           \r\n                {(props.soloActivos || props.todos) && <Titulo titulo={titulo} subtitulo={subtitulo}/>}\r\n                {props.soloActivos && !loading && <BarraSuperiorActivos setFiltro={setFiltro} filtro={filtro} vistaCelular={props.vistaCelular} />}\r\n                {props.todos && barraTodos()}\r\n\r\n\r\n            {  loading\r\n                ? <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n                    <img alt=\"\" src=\"/PAW/assets/images/loading.gif\" width=\"60px\" />\r\n                    <Typography variant=\"subtitle1\" color=\"initial\">Obteniendo discos</Typography>\r\n                </Box>\r\n                : errorAlCargar ?\r\n                    <Button\r\n                        variant=\"text\"\r\n                        border=\"0px\"\r\n                        style={{ textTransform: 'none', width: \"fit-content\" }}\r\n                        color=\"default\"\r\n                        onClick={() => setRenderList(true)}\r\n                        startIcon={<RefreshOutlinedIcon />}\r\n                    >\r\n                        Reintentar | No pudimos conectarnos con la base de discos\r\n            </Button>\r\n                    : !lista || lista.length === 0 ?\r\n                        <Button\r\n                            variant=\"text\"\r\n                            border=\"0px\"\r\n                            style={{ textTransform: 'none', width: \"fit-content\" }}\r\n                            color=\"default\"\r\n                            onClick={() => setRenderList(true)}\r\n                            startIcon={<RefreshOutlinedIcon />}\r\n                        >\r\n                            Actualizar | No se obtuvieron datos\r\n                            </Button>\r\n\r\n                        :\r\n                        <div>\r\n\r\n                            {!infoFechas ?\r\n                                <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"flex-start\" alignItems=\"center\">\r\n                                    <Button\r\n                                        variant=\"text\" border=\"0px\" style={{ textTransform: 'none' }} color=\"default\" onClick={() => setRenderList(true)}\r\n                                        startIcon={<RefreshOutlinedIcon />}\r\n                                    >\r\n                                        Actualizar {diferenciaFechas}\r\n                                    </Button>\r\n                                </Box>\r\n                                :\r\n                                <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"flex-start\" alignItems=\"center\">\r\n                                  <BlackTooltip title=\"Los discos con bordes punteados no fueron modificados en el periodo seleccionado.\" placement=\"left\">\r\n                                        <Button\r\n                                            variant=\"text\" border=\"0px\" style={{ textTransform: 'none', textAlign: \"left\" }} color=\"default\" onClick={() => setRenderList(true)}\r\n                                            startIcon={<RefreshOutlinedIcon />}\r\n                                        >\r\n                                            {infoFechas}\r\n                                        </Button>\r\n                                    </BlackTooltip>\r\n                                </Box>\r\n\r\n                            }\r\n\r\n                            <Box display=\"flex\" flexDirection=\"column\">   \r\n                                {/*props.soloActivos && resumen*/}\r\n                                \r\n                                    {lista.map(inc =>{\r\n                                        return (\r\n                                        <Incidencia\r\n                                            {...inc}\r\n                                            {...props}\r\n                                            incidencia={inc.incidencia}\r\n                                            solicitudesGEMA={solicitudesGEMA}\r\n                                            key={inc.incidencia}\r\n                                            accionesDT={accionesDT}\r\n                                            accionesDU={accionesDU}\r\n                                            resaltadoFiltro={resaltadoFiltro}\r\n                                        />\r\n                                        )\r\n                                    }\r\n                                    )}\r\n                            </Box>\r\n\r\n\r\n                       \r\n\r\n                      \r\n                        </div>\r\n\r\n            }\r\n            <Fab className={classes.fab} color=\"primary\"  onClick={() => setRenderList(true)} style={{backgroundColor: \"#0678f4\"}}>\r\n                <RefreshOutlinedIcon/>\r\n            </Fab>\r\n\r\n\r\n           \r\n\r\n           {modales}\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListaDiscos;"]},"metadata":{},"sourceType":"module"}